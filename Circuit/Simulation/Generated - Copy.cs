// Decompiled with JetBrains decompiler
// Type: DelegateHostAssembly.foo
// Assembly: DelegateHostAssembly, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 207B87B8-5A5E-418B-B402-39696E12C9E5
// Assembly location: C:\Users\08fed\Documents\spice\LiveSPICE\LiveSPICE\bin\Debug\net472\DelegateHostAssembly.dll

using Circuit;
using ComputerAlgebra.LinqCompiler;
using System;

namespace DelegateHostAssembly
{
    public class foo
    {
        public static double Execute(
          int SampleCount,
          double _param1,
          double[] state,
          double[][] ins,
          double[][] outs)
        {
            double num1 = state[0];
            double num2 = state[1];
            double num3 = state[2];
            double num4 = state[3];
            double num5 = state[4];
            double num6 = state[5];
            double num7 = state[6];
            double num8 = state[7];
            double num9 = state[8];
            double num10 = state[9];
            double num11 = state[10];
            double num12 = state[11];
            double num13 = state[12];
            double num14 = state[13];
            double num15 = state[14];
            double num16 = state[15];
            double num17 = state[16];
            double num18 = state[17];
            double num19 = state[18];
            double num20 = state[19];
            double num21 = state[20];
            double num22 = state[21];
            double num23 = state[22];
            double num24 = state[23];
            double num25 = state[24];
            double num26 = state[25];
            double num27 = state[26];
            double num28 = state[27];
            double num29 = state[28];
            double num30 = state[29];
            double num31 = state[30];
            double num32 = state[31];
            double num33 = state[32];
            double num34 = state[33];
            double num35 = state[34];
            double num36 = state[35];
            double num37 = state[36];
            double num38 = state[37];
            double num39 = state[38];
            double num40 = state[39];
            double num41 = state[40];
            double num42 = state[41];
            double num43 = state[42];
            double num44 = state[43];
            double num45 = state[44];
            double num46 = state[45];
            double num47 = state[46];
            double num48 = state[47];
            double num49 = state[48];
            double num50 = state[49];
            double num51 = state[50];
            double num52 = state[51];
            double num53 = state[52];
            double num54 = state[53];
            double num55 = state[54];
            double num56 = state[55];
            double num57 = state[56];
            double num58 = state[57];
            double num59 = state[58];
            double num60 = state[59];
            double num61 = state[60];
            double num62 = state[61];
            double num63 = state[62];
            double num64 = state[63];
            double num65 = state[64];
            double num66 = state[65];
            double num67 = state[66];
            double num68 = state[67];
            double num69 = num68;
            double[][] Ab = new double[8][]
            {
        new double[9],
        new double[9],
        new double[9],
        new double[9],
        new double[9],
        new double[9],
        new double[9],
        new double[9]
            };
            for (int At = 0; At < SampleCount; ++At)
            {
                double num70 = (ins[0][At] - num69) * 1.0;
                double d = 0.0;
                int num71 = 1;
                do
                {
                    _param1 += 2.08333333333333E-05;
                    num69 += num70;
                    double num72 = 0.0;
                    double num73 = 0.0;
                    double num74 = 0.0;
                    double num75 = 0.0;
                    double num76 = 0.0;
                    double num77 = num69;
                    double num78 = num56;
                    double num79 = num59;
                    double num80 = num57;
                    double num81 = num55;
                    double num82 = num58;
                    double num83 = num54;
                    double num84 = num53;
                    double num85 = num52;
                    double num86 = num51;
                    double num87 = num49;
                    double num88 = num7;
                    double num89 = num20;
                    double num90 = num16;
                    double num91 = num14;
                    double num92 = num50;
                    double num93 = num44;
                    double num94 = num24;
                    double num95 = num19;
                    double num96 = num22;
                    double num97 = num48;
                    double num98 = num47;
                    double num99 = num43;
                    double num100 = num23;
                    double num101 = num6;
                    double num102 = num45;
                    double num103 = num34;
                    double num104 = num33;
                    double num105 = num32;
                    double num106 = num31;
                    double num107 = num30;
                    double num108 = num29;
                    double num109 = num28;
                    double num110 = num27;
                    double num111 = num11;
                    double num112 = num25;
                    double num113 = num38;
                    double num114 = num37;
                    double num115 = num41;
                    double num116 = num21;
                    double num117 = num40;
                    double num118 = num36;
                    double num119 = num42;
                    double num120 = num35;
                    double num121 = num18;
                    double num122 = num17;
                    double num123 = num39;
                    double num124 = num13;
                    double num125 = num12;
                    double num126 = num15;
                    double num127 = num10;
                    double num128 = num9;
                    double num129 = num8;
                    double num130 = num46;
                    double num131 = num26;
                    double num132 = num5;
                    double num133 = num4;
                    double num134 = num3;
                    double num135 = num60;
                    double num136 = num2;
                    double num137 = num61;
                    double num138 = num1;
                    double num139 = num62;
                    double num140 = num63;
                    double num141 = num64;
                    double num142 = num65;
                    double num143 = num66;
                    double num144 = num67;
                    int num145 = 8;
                    do
                    {
                        double[] numArray1 = Ab[0];
                        double num146 = num144 * 3.4 + num135 * (17.0 / 516.0) <= -5.0 ? 0.0 : (num144 * 3.4 + num135 * (17.0 / 516.0) >= 5.0 ? 17.0 / 516.0 : 1.0 / ((num144 * 3.4 + num135 * (17.0 / 516.0) >= 50.0 ? num144 * 1.7627998797196E+22 + num135 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num144 * 3.4 + num135 * (17.0 / 516.0))) + 1.0) * (num144 * 3.4 + num135 * (17.0 / 516.0) >= 50.0 ? 1.70813941833295E+20 : StandardMath.Exp(num144 * 3.4 + num135 * (17.0 / 516.0)) * (17.0 / 516.0))) * StandardMath.Pow((num144 * 3.4 + num135 * (17.0 / 516.0) >= 5.0 ? num144 * 3.4 + num135 * (17.0 / 516.0) : StandardMath.Ln((num144 * 3.4 + num135 * (17.0 / 516.0) >= 50.0 ? num144 * 1.7627998797196E+22 + num135 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num144 * 3.4 + num135 * (17.0 / 516.0))) + 1.0)) * (5.0 / 17.0), 0.26) * 0.000830858823529412;
                        double num147 = num146 * -1.21368874800567E-06;
                        numArray1[0] = num147;
                        double num148 = num137 <= -5.0 ? 0.0 : (num137 * 9.901 >= 5.0 ? 9.901 : 1.0 / ((num137 * 9.901 >= 50.0 ? num137 * 5.13337694385406E+22 - 2.54050570900767E+23 : StandardMath.Exp(num137 * 9.901)) + 1.0) * (num137 * 9.901 >= 50.0 ? 5.13337694385406E+22 : StandardMath.Exp(num137 * 9.901) * 9.901)) * StandardMath.Pow((num137 * 9.901 >= 5.0 ? num137 * 9.901 : StandardMath.Ln((num137 * 9.901 >= 50.0 ? num137 * 5.13337694385406E+22 - 2.54050570900767E+23 : StandardMath.Exp(num137 * 9.901)) + 1.0)) * 0.100999899000101, 0.314) * 8.19773558226442E-05;
                        double num149 = num148 * -1.0 - 1.85718676543368E-05;
                        numArray1[1] = num149;
                        numArray1[2] = -3.84039896383142E-10;
                        numArray1[3] = 3.37112528270999E-07;
                        numArray1[4] = 3.17400945634251E-09;
                        numArray1[5] = 1.17978506986288E-05;
                        double num150 = num143 <= -5.0 ? 0.0 : (num143 * 9.901 >= 5.0 ? 9.901 : 1.0 / ((num143 * 9.901 >= 50.0 ? num143 * 5.13337694385406E+22 - 2.54050570900767E+23 : StandardMath.Exp(num143 * 9.901)) + 1.0) * (num143 * 9.901 >= 50.0 ? 5.13337694385406E+22 : StandardMath.Exp(num143 * 9.901) * 9.901)) * StandardMath.Pow((num143 * 9.901 >= 5.0 ? num143 * 9.901 : StandardMath.Ln((num143 * 9.901 >= 50.0 ? num143 * 5.13337694385406E+22 - 2.54050570900767E+23 : StandardMath.Exp(num143 * 9.901)) + 1.0)) * 0.100999899000101, 0.314) * 8.19773558226442E-05;
                        double num151 = num150 * -0.000261977879152192 - 5.89139837440429E-08;
                        numArray1[6] = num151;
                        double num152 = num144 <= -5.0 ? 0.0 : (num144 * 9.901 >= 5.0 ? 9.901 : 1.0 / ((num144 * 9.901 >= 50.0 ? num144 * 5.13337694385406E+22 - 2.54050570900767E+23 : StandardMath.Exp(num144 * 9.901)) + 1.0) * (num144 * 9.901 >= 50.0 ? 5.13337694385406E+22 : StandardMath.Exp(num144 * 9.901) * 9.901)) * StandardMath.Pow((num144 * 9.901 >= 5.0 ? num144 * 9.901 : StandardMath.Ln((num144 * 9.901 >= 50.0 ? num144 * 5.13337694385406E+22 - 2.54050570900767E+23 : StandardMath.Exp(num144 * 9.901)) + 1.0)) * 0.100999899000101, 0.314) * 8.19773558226442E-05;
                        double num153 = num144 * 3.4 + num135 * (17.0 / 516.0) <= -5.0 ? 0.0 : (num144 * 3.4 + num135 * (17.0 / 516.0) >= 5.0 ? 3.4 : 1.0 / ((num144 * 3.4 + num135 * (17.0 / 516.0) >= 50.0 ? num144 * 1.7627998797196E+22 + num135 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num144 * 3.4 + num135 * (17.0 / 516.0))) + 1.0) * (num144 * 3.4 + num135 * (17.0 / 516.0) >= 50.0 ? 1.7627998797196E+22 : StandardMath.Exp(num144 * 3.4 + num135 * (17.0 / 516.0)) * 3.4)) * StandardMath.Pow((num144 * 3.4 + num135 * (17.0 / 516.0) >= 5.0 ? num144 * 3.4 + num135 * (17.0 / 516.0) : StandardMath.Ln((num144 * 3.4 + num135 * (17.0 / 516.0) >= 50.0 ? num144 * 1.7627998797196E+22 + num135 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num144 * 3.4 + num135 * (17.0 / 516.0))) + 1.0)) * (5.0 / 17.0), 0.26) * 0.000830858823529412;
                        double num154 = num152 - num153;
                        double num155 = num154 * 1.21368874800567E-06 - 5.51676740907037E-10;
                        numArray1[7] = num155;
                        double num156 = num137 <= -5.0 ? 0.0 : StandardMath.Pow((num137 * 9.901 >= 5.0 ? num137 * 9.901 : StandardMath.Ln((num137 * 9.901 >= 50.0 ? num137 * 5.13337694385406E+22 - 2.54050570900767E+23 : StandardMath.Exp(num137 * 9.901)) + 1.0)) * 0.100999899000101, 1.314) * 0.0006177;
                        double num157 = num156 * -1.0;
                        double num158 = num143 <= -5.0 ? 0.0 : StandardMath.Pow((num143 * 9.901 >= 5.0 ? num143 * 9.901 : StandardMath.Ln((num143 * 9.901 >= 50.0 ? num143 * 5.13337694385406E+22 - 2.54050570900767E+23 : StandardMath.Exp(num143 * 9.901)) + 1.0)) * 0.100999899000101, 1.314) * 0.0006177;
                        double num159 = num158 * 0.000261977879152192;
                        double num160 = num144 <= -5.0 ? 0.0 : StandardMath.Pow((num144 * 9.901 >= 5.0 ? num144 * 9.901 : StandardMath.Ln((num144 * 9.901 >= 50.0 ? num144 * 5.13337694385406E+22 - 2.54050570900767E+23 : StandardMath.Exp(num144 * 9.901)) + 1.0)) * 0.100999899000101, 1.314) * 0.0006177;
                        double num161 = num144 * 3.4 + num135 * (17.0 / 516.0) <= -5.0 ? 0.0 : StandardMath.Pow((num144 * 3.4 + num135 * (17.0 / 516.0) >= 5.0 ? num144 * 3.4 + num135 * (17.0 / 516.0) : StandardMath.Ln((num144 * 3.4 + num135 * (17.0 / 516.0) >= 50.0 ? num144 * 1.7627998797196E+22 + num135 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num144 * 3.4 + num135 * (17.0 / 516.0))) + 1.0)) * (5.0 / 17.0), 1.26) * 0.002242;
                        double num162 = num160 - num161;
                        double num163 = num162 * 1.21368874800567E-06;
                        double num164 = -num139;
                        double num165 = (num164 + num69) * 3.84039896383142E-10;
                        double num166 = num142 * 1.17978506986288E-05;
                        double num167 = num137 * 1.85718676543368E-05;
                        double num168 = num140 * 3.37112528270999E-07;
                        double num169 = -num143 + num46;
                        double num170 = num169 * 5.89139837440429E-08;
                        double num171 = num141 * 3.17400945634251E-09;
                        double num172 = num144 * 5.51676740907037E-10;
                        double num173 = num43 * 2.77911949707547E-06;
                        double num174 = num50 * 1.05135957376164E-05;
                        double num175 = num58 * 1.54468381990781E-05;
                        double num176 = num41 * 2.78092307411295E-07;
                        double num177 = num40 * 2.83832851223538E-13;
                        double num178 = num45 * 1.73115420151825E-19;
                        double num179 = num27 * 2.01676656315833E-18;
                        double num180 = num8 * 1.17979694013075E-05;
                        double num181 = num34 * 1.1782958484869E-05;
                        double num182 = num15 * 5.54259057566602E-10;
                        double num183 = num59 * 2.9304288681748E-19;
                        double num184 = num42 * 2.72570361654333E-09;
                        double num185 = num38 * 1.18690315145091E-10;
                        double num186 = num49 * 1.19529440423137E-06;
                        double num187 = num5 * 2.59593991292712E-12;
                        double num188 = num30 * 2.33014089929441E-07;
                        double num189 = num14 * 4.13128912966352E-07;
                        double num190 = num16 * 1.74686508990317E-06;
                        double num191 = num9 * 2.39738214591317E-18;
                        double num192 = num31 * 1.45081738633631E-08;
                        double num193 = num44 * 7.3011081511225E-07;
                        double num194 = num21 * 2.83832170076735E-13;
                        double num195 = num35 * 1.23006682772538E-14;
                        double num196 = num36 * 1.08549157680348E-10;
                        double num197 = num37 * 1.19658381429322E-09;
                        double num198 = num25 * 1.18854475785277E-07;
                        double num199 = num6 * 1.03678442100406E-21;
                        double num200 = num4 * 9.52737319224386E-20;
                        double num201 = num26 * 1.90981682117266E-19;
                        double num202 = num33 * 4.20458687467688E-19;
                        double num203 = num1 * 8.19675284809778E-22;
                        double num204 = num12 * 1.18854463421703E-07;
                        double num205 = num48 * 1.60828674599275E-08;
                        double num206 = num47 * 1.30282092995478E-09;
                        double num207 = num51 * 2.61147129540537E-05;
                        double num208 = num53 * 0.026174096542093;
                        double num209 = num55 * 0.451895708819182;
                        double num210 = num54 * 0.000101622611054495;
                        double num211 = num52 * 2.62433265893278E-07;
                        double num212 = num56 * 1.38751366864337E-14;
                        double num213 = num157 - num159 + num163 + num165 + num166 - num167 + num168 + num170 + num171 - num172 - num173 - num174 - num175 - num176 - num177 - num178 + num179 + num180 + num181 - num182 + num183 - num184 + num185 + num186 + num187 + num188 - num189 - num190 - num191 - num192 + num193 - num194 + num195 - num196 - num197 - num198 + num199 + num200 - num201 - num202 - num203 + num204 + num205 + num206 + num207 + num208 - num209 + num210 + num211 + num212 - 8.0266006058969E-08;
                        numArray1[8] = num213;
                        double[] numArray2 = Ab[1];
                        double num214 = num146 * -1.46083169839149 - 4.88393288752308E-05;
                        numArray2[0] = num214;
                        double num215 = num148 * 8.97013198539234E-16 + 9.83007613204903E-19;
                        numArray2[1] = num215;
                        numArray2[2] = 2.03272039702963E-23;
                        numArray2[3] = -3.41228950952791E-17;
                        numArray2[4] = -2.14072439182689E-07;
                        numArray2[5] = -6.24459385133445E-19;
                        double num216 = num150 * -0.00100614046415914 - 1.07070414650508E-19;
                        numArray2[6] = num216;
                        double num217 = num154 * 1.46083169839149 + 4.50634027509317E-07;
                        numArray2[7] = num217;
                        double num218 = num156 * 8.97013198539234E-16 - num158 * 0.00100614046415914 + num162 * 1.46083169839149 + (num139 - num69) * 2.03272039702963E-23 - num142 * 6.24459385133445E-19 + num137 * 9.83007613204903E-19 - num140 * 3.41228950952791E-17 + num169 * 1.07070414650508E-19 - num141 * 2.14072439182689E-07 + num144 * 4.50634027509317E-07 - num135 * 4.88393288752308E-05 - num43 * 5.05077840615842E-18 + num50 * 5.56483862829068E-19 + num58 * 8.17600029908268E-19 - num41 * 3.33461466943642E-12 + num40 * 1.35392127164005E-05 + num45 * 2.85966571667721E-06 - num27 * 3.33146417236939E-05 - num8 * 6.24465668057654E-19 - num34 * 6.23671141335042E-19 + num15 * 2.24133753754025E-07 - num59 * 4.84072820441486E-06 - num42 * 8.64674456191924E-09 - num38 * 6.28226980575477E-24 - num49 * 1.57739780888712E-06 - num5 * 1.0613294346215E-09 - num30 * 1.23334189456797E-20 + num14 * 2.18668835164867E-20 + num16 * 9.24614430049368E-20 - num9 * 9.23735970096913E-06 + num31 * 7.67916594433414E-22 - num44 * 3.8644712696463E-20 + num21 * 2.28745847955918E-06 + num35 * 3.00071203820933E-09 + num36 * 2.47589944403782E-09 - num37 * 3.33461416620547E-12 + num25 * 6.29095881657994E-21 - num6 * 1.71264747053158E-08 - num4 * 1.57381141806749E-06 + num26 * 3.15479561777405E-06 + num33 * 6.94548927401123E-06 + num1 * 1.35400838857823E-08 - num12 * 6.29095816217683E-21 + num48 * 2.92290417023057E-20 - num47 * 3.4733196458787E-17 - num51 * 1.38224986998015E-18 - num53 * 1.38539303900485E-15 + num55 * 2.38646626681524E-14 + num54 * 1.84689175845663E-16 - num52 * 0.000106123936436565 - num56 * 0.22920114604237 + 1.3174358163074E-06;
                        numArray2[8] = num218;
                        double[] numArray3 = Ab[2];
                        numArray3[0] = 0.0;
                        double num219 = num148 * 2.06785824415168E-05;
                        numArray3[1] = num219;
                        double num220 = num139 <= -5.0 ? 0.0 : (num139 * 9.901 >= 5.0 ? 9.901 : 1.0 / ((num139 * 9.901 >= 50.0 ? num139 * 5.13337694385406E+22 - 2.54050570900767E+23 : StandardMath.Exp(num139 * 9.901)) + 1.0) * (num139 * 9.901 >= 50.0 ? 5.13337694385406E+22 : StandardMath.Exp(num139 * 9.901) * 9.901)) * StandardMath.Pow((num139 * 9.901 >= 5.0 ? num139 * 9.901 : StandardMath.Ln((num139 * 9.901 >= 50.0 ? num139 * 5.13337694385406E+22 - 2.54050570900767E+23 : StandardMath.Exp(num139 * 9.901)) + 1.0)) * 0.100999899000101, 0.314) * 8.19773558226442E-05;
                        double num221 = -num220 - 1.47054036630612E-05;
                        numArray3[2] = num221;
                        numArray3[3] = 0.0;
                        numArray3[4] = 0.0;
                        numArray3[5] = 3.48401525687524E-10;
                        numArray3[6] = 0.0;
                        numArray3[7] = 0.0;
                        double num222 = num139 <= -5.0 ? 0.0 : StandardMath.Pow((num139 * 9.901 >= 5.0 ? num139 * 9.901 : StandardMath.Ln((num139 * 9.901 >= 50.0 ? num139 * 5.13337694385406E+22 - 2.54050570900767E+23 : StandardMath.Exp(num139 * 9.901)) + 1.0)) * 0.100999899000101, 1.314) * 0.0006177;
                        double num223 = -num222 + num156 * 2.06785824415168E-05 + num69 * 1.47054036630612E-05 - num50 * 1.78622459002153E-10 - num58 * 5.28886616122084E-11 + num8 * 2.00443535997274E-10 - num34 * 1.46869714216251E-05 - num38 * 1.47942579004937E-10 - num49 * 1.80758067933038E-08 + num30 * 3.95883109490587E-12 - num14 * 1.44800289770476E-11 - num16 * 9.91625663822398E-12 + num31 * 1.80838399103934E-08 + num44 * 1.24043374307051E-11 - num35 * 1.54106853130143E-14 - num25 * 2.00318621774491E-12 + num12 * 2.01859690305792E-12 - num51 * 3.25509118387081E-05 - num53 * 3.21066664131823E-05 - num55 * 3.03282839856428E-06 - 8.02545048178843E-08 + num142 * 3.48401525687524E-10 - num139 * 1.47054036630612E-05;
                        numArray3[8] = num223;
                        double[] numArray4 = Ab[3];
                        double num224 = num146 * 4.28343622688904E-05;
                        numArray4[0] = num224;
                        double num225 = num148 * 0.981848216100534;
                        double num226 = num137 * 3.4 + num140 * (17.0 / 516.0) <= -5.0 ? 0.0 : (num137 * 3.4 + num140 * (17.0 / 516.0) >= 5.0 ? 3.4 : 1.0 / ((num137 * 3.4 + num140 * (17.0 / 516.0) >= 50.0 ? num137 * 1.7627998797196E+22 + num140 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num137 * 3.4 + num140 * (17.0 / 516.0))) + 1.0) * (num137 * 3.4 + num140 * (17.0 / 516.0) >= 50.0 ? 1.7627998797196E+22 : StandardMath.Exp(num137 * 3.4 + num140 * (17.0 / 516.0)) * 3.4)) * StandardMath.Pow((num137 * 3.4 + num140 * (17.0 / 516.0) >= 5.0 ? num137 * 3.4 + num140 * (17.0 / 516.0) : StandardMath.Ln((num137 * 3.4 + num140 * (17.0 / 516.0) >= 50.0 ? num137 * 1.7627998797196E+22 + num140 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num137 * 3.4 + num140 * (17.0 / 516.0))) + 1.0)) * (5.0 / 17.0), 0.26) * 0.000830858823529412;
                        double num227 = num225 - num226;
                        numArray4[1] = num227;
                        numArray4[2] = 0.0;
                        double num228 = num137 * 3.4 + num140 * (17.0 / 516.0) <= -5.0 ? 0.0 : (num137 * 3.4 + num140 * (17.0 / 516.0) >= 5.0 ? 17.0 / 516.0 : 1.0 / ((num137 * 3.4 + num140 * (17.0 / 516.0) >= 50.0 ? num137 * 1.7627998797196E+22 + num140 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num137 * 3.4 + num140 * (17.0 / 516.0))) + 1.0) * (num137 * 3.4 + num140 * (17.0 / 516.0) >= 50.0 ? 1.70813941833295E+20 : StandardMath.Exp(num137 * 3.4 + num140 * (17.0 / 516.0)) * (17.0 / 516.0))) * StandardMath.Pow((num137 * 3.4 + num140 * (17.0 / 516.0) >= 5.0 ? num137 * 3.4 + num140 * (17.0 / 516.0) : StandardMath.Ln((num137 * 3.4 + num140 * (17.0 / 516.0) >= 50.0 ? num137 * 1.7627998797196E+22 + num140 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num137 * 3.4 + num140 * (17.0 / 516.0))) + 1.0)) * (5.0 / 17.0), 0.26) * 0.000830858823529412;
                        double num229 = -num228 - 1.18976139352609E-05;
                        numArray4[3] = num229;
                        numArray4[4] = -1.12019388101985E-07;
                        numArray4[5] = 0.0;
                        double num230 = num150 * 0.00924590872287481 + 2.07923400999024E-06;
                        numArray4[6] = num230;
                        double num231 = -num152 + num153;
                        double num232 = num231 * 4.28343622688904E-05 + 1.94701659829696E-08;
                        numArray4[7] = num232;
                        double num233 = num156 * 0.981848216100534;
                        double num234 = num137 * 3.4 + num140 * (17.0 / 516.0) <= -5.0 ? 0.0 : StandardMath.Pow((num137 * 3.4 + num140 * (17.0 / 516.0) >= 5.0 ? num137 * 3.4 + num140 * (17.0 / 516.0) : StandardMath.Ln((num137 * 3.4 + num140 * (17.0 / 516.0) >= 50.0 ? num137 * 1.7627998797196E+22 + num140 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num137 * 3.4 + num140 * (17.0 / 516.0))) + 1.0)) * (5.0 / 17.0), 1.26) * 0.002242;
                        double num235 = num158 * 0.00924590872287481;
                        double num236 = num160 * 4.28343622688904E-05;
                        double num237 = num161 * 4.28343622688904E-05;
                        double num238 = num43 * 1.8132895466688E-06;
                        double num239 = num41 * 9.81463052979663E-06;
                        double num240 = num40 * 1.00172298648223E-11;
                        double num241 = num45 * 6.10971192844892E-18;
                        double num242 = num27 * 7.117715289036E-17;
                        double num243 = num46 * 2.07923400999024E-06;
                        double num244 = num15 * 1.95613029301239E-08;
                        double num245 = num59 * 1.03422769593006E-17;
                        double num246 = num42 * 9.61974611204824E-08;
                        double num247 = num49 * 1.04935737688146E-08;
                        double num248 = num5 * 9.16177486536877E-11;
                        double num249 = num9 * 8.46101074132519E-17;
                        double num250 = num21 * 1.00172058253072E-11;
                        double num251 = num35 * 2.22013073245175E-15;
                        double num252 = num36 * 3.83099369727471E-09;
                        double num253 = num37 * 4.22306828424905E-08;
                        double num254 = num6 * 3.65909295583438E-20;
                        double num255 = num4 * 3.36246797589643E-18;
                        double num256 = num26 * 6.740260690375E-18;
                        double num257 = num33 * 1.48391255729175E-17;
                        double num258 = num1 * 2.89285602672771E-20;
                        double num259 = num48 * 1.04935737654444E-08;
                        double num260 = num47 * 4.59800783165168E-08;
                        double num261 = num55 * 1.88884327778E-05;
                        double num262 = num54 * 0.00462711983789802;
                        double num263 = num52 * 9.26198055403594E-06;
                        double num264 = num56 * 4.89691143906279E-13;
                        double num265 = num233 - num234 + num235 - num236 + num237 - num238 + num239 + num240 + num241 - num242 - num243 + num244 - num245 + num246 - num247 - num248 + num249 + num250 + num251 + num252 + num253 - num254 - num255 + num256 + num257 + num258 + num259 - num260 - num261 - num262 - num263 - num264 + 7.95327541117995E-08 + num144 * 1.94701659829696E-08 - num141 * 1.12019388101985E-07 + num143 * 2.07923400999024E-06 - num140 * 1.18976139352609E-05;
                        numArray4[8] = num265;
                        double[] numArray5 = Ab[4];
                        double num266 = num146 * 0.00438319780634706;
                        numArray5[0] = num266;
                        double num267 = num148 - num226;
                        double num268 = num267 * 3.13499884460663E-09;
                        numArray5[1] = num268;
                        numArray5[2] = 0.0;
                        double num269 = num228 * -3.13499884460663E-09;
                        numArray5[3] = num269;
                        double num270 = num143 * 3.4 + num141 * (17.0 / 516.0) <= -5.0 ? 0.0 : (num143 * 3.4 + num141 * (17.0 / 516.0) >= 5.0 ? 17.0 / 516.0 : 1.0 / ((num143 * 3.4 + num141 * (17.0 / 516.0) >= 50.0 ? num143 * 1.7627998797196E+22 + num141 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num143 * 3.4 + num141 * (17.0 / 516.0))) + 1.0) * (num143 * 3.4 + num141 * (17.0 / 516.0) >= 50.0 ? 1.70813941833295E+20 : StandardMath.Exp(num143 * 3.4 + num141 * (17.0 / 516.0)) * (17.0 / 516.0))) * StandardMath.Pow((num143 * 3.4 + num141 * (17.0 / 516.0) >= 5.0 ? num143 * 3.4 + num141 * (17.0 / 516.0) : StandardMath.Ln((num143 * 3.4 + num141 * (17.0 / 516.0) >= 50.0 ? num143 * 1.7627998797196E+22 + num141 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num143 * 3.4 + num141 * (17.0 / 516.0))) + 1.0)) * (5.0 / 17.0), 0.26) * 0.000830858823529412;
                        double num271 = -num270 - 1.14628368833476E-05;
                        numArray5[4] = num271;
                        numArray5[5] = 0.0;
                        double num272 = num150 * 0.946124666679469;
                        double num273 = num143 * 3.4 + num141 * (17.0 / 516.0) <= -5.0 ? 0.0 : (num143 * 3.4 + num141 * (17.0 / 516.0) >= 5.0 ? 3.4 : 1.0 / ((num143 * 3.4 + num141 * (17.0 / 516.0) >= 50.0 ? num143 * 1.7627998797196E+22 + num141 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num143 * 3.4 + num141 * (17.0 / 516.0))) + 1.0) * (num143 * 3.4 + num141 * (17.0 / 516.0) >= 50.0 ? 1.7627998797196E+22 : StandardMath.Exp(num143 * 3.4 + num141 * (17.0 / 516.0)) * 3.4)) * StandardMath.Pow((num143 * 3.4 + num141 * (17.0 / 516.0) >= 5.0 ? num143 * 3.4 + num141 * (17.0 / 516.0) : StandardMath.Ln((num143 * 3.4 + num141 * (17.0 / 516.0) >= 50.0 ? num143 * 1.7627998797196E+22 + num141 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num143 * 3.4 + num141 * (17.0 / 516.0))) + 1.0)) * (5.0 / 17.0), 0.26) * 0.000830858823529412;
                        double num274 = num272 - num273 + 6.63890417286126E-15;
                        numArray5[6] = num274;
                        double num275 = num231 * 0.00438319780634706 + 1.99236276854606E-06;
                        numArray5[7] = num275;
                        double num276 = num156 * 3.13499884460663E-09;
                        double num277 = num234 * 3.13499884460663E-09;
                        double num278 = num158 * 0.946124666679469;
                        double num279 = num143 * 3.4 + num141 * (17.0 / 516.0) <= -5.0 ? 0.0 : StandardMath.Pow((num143 * 3.4 + num141 * (17.0 / 516.0) >= 5.0 ? num143 * 3.4 + num141 * (17.0 / 516.0) : StandardMath.Ln((num143 * 3.4 + num141 * (17.0 / 516.0) >= 50.0 ? num143 * 1.7627998797196E+22 + num141 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num143 * 3.4 + num141 * (17.0 / 516.0))) + 1.0)) * (5.0 / 17.0), 1.26) * 0.002242;
                        double num280 = num160 * 0.00438319780634706;
                        double num281 = num161 * 0.00438319780634706;
                        double num282 = num41 * 3.64693369141705E-09;
                        double num283 = num40 * 9.84725543610949E-10;
                        double num284 = num45 * 6.00604107246858E-16;
                        double num285 = num27 * 6.99694042349729E-15;
                        double num286 = num46 * 6.63890417286126E-15;
                        double num287 = num15 * 2.00168872193075E-06;
                        double num288 = num59 * 1.01667870642429E-15;
                        double num289 = num42 * 9.45651626988402E-06;
                        double num290 = num49 * 3.31294527627712E-16;
                        double num291 = num5 * 9.3791874343608E-09;
                        double num292 = num9 * 8.3174425606508E-15;
                        double num293 = num21 * 9.84723180450188E-10;
                        double num294 = num35 * 2.18245909488242E-13;
                        double num295 = num36 * 4.74729590150412E-09;
                        double num296 = num37 * 3.64690248856744E-09;
                        double num297 = num6 * 3.59700470956591E-18;
                        double num298 = num4 * 3.30541292365338E-16;
                        double num299 = num26 * 6.62589055255425E-16;
                        double num300 = num33 * 1.4587332220275E-15;
                        double num301 = num1 * 2.84376944719156E-18;
                        double num302 = num47 * 3.78417537853092E-14;
                        double num303 = num54 * 1.47138833618379E-11;
                        double num304 = num52 * 0.000947769281217209;
                        double num305 = num56 * 4.81381963269076E-11;
                        double num306 = num276 - num277 + num278 - num279 - num280 + num281 + num282 + num283 + num284 - num285 - num286 + num287 - num288 + num289 - num290 - num291 + num292 + num293 + num294 + num295 + num296 - num297 - num298 + num299 + num300 + num301 + num302 - num303 - num304 - num305 + 7.5662051492447E-08 + num143 * 6.63890417286126E-15 - num141 * 1.14628368833476E-05 + num144 * 1.99236276854606E-06;
                        numArray5[8] = num306;
                        double[] numArray6 = Ab[5];
                        numArray6[0] = 0.0;
                        double num307 = num148 * -0.6352538640224;
                        numArray6[1] = num307;
                        double num308 = num220 * 0.999976307925055 - (num139 * 3.4 + num142 * (17.0 / 516.0) <= -5.0 ? 0.0 : (num139 * 3.4 + num142 * (17.0 / 516.0) >= 5.0 ? 3.4 : 1.0 / ((num139 * 3.4 + num142 * (17.0 / 516.0) >= 50.0 ? num139 * 1.7627998797196E+22 + num142 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num139 * 3.4 + num142 * (17.0 / 516.0))) + 1.0) * (num139 * 3.4 + num142 * (17.0 / 516.0) >= 50.0 ? 1.7627998797196E+22 : StandardMath.Exp(num139 * 3.4 + num142 * (17.0 / 516.0)) * 3.4)) * StandardMath.Pow((num139 * 3.4 + num142 * (17.0 / 516.0) >= 5.0 ? num139 * 3.4 + num142 * (17.0 / 516.0) : StandardMath.Ln((num139 * 3.4 + num142 * (17.0 / 516.0) >= 50.0 ? num139 * 1.7627998797196E+22 + num142 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num139 * 3.4 + num142 * (17.0 / 516.0))) + 1.0)) * (5.0 / 17.0), 0.26) * 0.000830858823529412);
                        numArray6[2] = num308;
                        numArray6[3] = 0.0;
                        numArray6[4] = 0.0;
                        double num309 = -(num139 * 3.4 + num142 * (17.0 / 516.0) <= -5.0 ? 0.0 : (num139 * 3.4 + num142 * (17.0 / 516.0) >= 5.0 ? 17.0 / 516.0 : 1.0 / ((num139 * 3.4 + num142 * (17.0 / 516.0) >= 50.0 ? num139 * 1.7627998797196E+22 + num142 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num139 * 3.4 + num142 * (17.0 / 516.0))) + 1.0) * (num139 * 3.4 + num142 * (17.0 / 516.0) >= 50.0 ? 1.70813941833295E+20 : StandardMath.Exp(num139 * 3.4 + num142 * (17.0 / 516.0)) * (17.0 / 516.0))) * StandardMath.Pow((num139 * 3.4 + num142 * (17.0 / 516.0) >= 5.0 ? num139 * 3.4 + num142 * (17.0 / 516.0) : StandardMath.Ln((num139 * 3.4 + num142 * (17.0 / 516.0) >= 50.0 ? num139 * 1.7627998797196E+22 + num142 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num139 * 3.4 + num142 * (17.0 / 516.0))) + 1.0)) * (5.0 / 17.0), 0.26) * 0.000830858823529412) - 1.07030264792205E-05;
                        numArray6[5] = num309;
                        numArray6[6] = 0.0;
                        numArray6[7] = 0.0;
                        double num310 = num222 * 0.999976307925055 - (num139 * 3.4 + num142 * (17.0 / 516.0) <= -5.0 ? 0.0 : StandardMath.Pow((num139 * 3.4 + num142 * (17.0 / 516.0) >= 5.0 ? num139 * 3.4 + num142 * (17.0 / 516.0) : StandardMath.Ln((num139 * 3.4 + num142 * (17.0 / 516.0) >= 50.0 ? num139 * 1.7627998797196E+22 + num142 * 1.70813941833295E+20 - 2.54050570900767E+23 : StandardMath.Exp(num139 * 3.4 + num142 * (17.0 / 516.0))) + 1.0)) * (5.0 / 17.0), 1.26) * 0.002242) - num156 * 0.6352538640224 + num50 * 5.48734941590982E-06 + num58 * 1.62475966363505E-06 - num8 * 6.15770114420093E-06 - num34 * 1.0689864215362E-05 + num38 * 4.54485191294533E-06 - num49 * 2.59942655395728E-07 - num30 * 1.21616786700129E-07 + num14 * 4.44831960065008E-07 + num16 * 3.04631149832701E-07 + num31 * 1.31622638585525E-08 - num44 * 3.81065931660404E-07 + num35 * 4.73422074265139E-10 + num25 * 6.15386373209018E-08 - num12 * 6.20120593951669E-08 - num51 * 2.36920749453945E-05 - num53 * 0.0136710793626248 + num55 * 0.0931696340672134 + 2.18637805829244E-07 - num142 * 1.07030264792205E-05;
                        numArray6[8] = num310;
                        double[] numArray7 = Ab[6];
                        double num311 = num146 * -2.66289975281481E-12;
                        numArray7[0] = num311;
                        double num312 = (-num148 + num226) * 0.174760588235524;
                        numArray7[1] = num312;
                        numArray7[2] = 0.0;
                        double num313 = num228 * 0.174760588235524;
                        numArray7[3] = num313;
                        double num314 = num270 * 0.0182136627002403;
                        numArray7[4] = num314;
                        numArray7[5] = 0.0;
                        double num315 = num150 * 0.999999999420832 + num273 * 0.0182136627002403 + 3.87524725980269E-06;
                        numArray7[6] = num315;
                        double num316 = num154 * 2.66289975281481E-12 - 1.21961944459952E-15;
                        numArray7[7] = num316;
                        double num317 = num144 * -1.21961944459952E-15 + (num156 * -0.174760588235524 + num234 * 0.174760588235524 + num158 * 0.999999999420832 + num279 * 0.0182136627002403 + num160 * 2.66289975281481E-12 - num161 * 2.66289975281481E-12 - num41 * 1.74691398149623E-06 - num40 * 7.01466652076124E-14 - num45 * 4.27838756765382E-20 + num27 * 4.98425211521259E-19 - num46 * 1.7475876853346E-06 - num15 * 1.22532830157424E-15 + num59 * 7.24228403599017E-20 - num42 * 6.73632450298224E-10 + num49 * 2.35996785758172E-20 - num5 * 7.01120294675436E-15 - num9 * 5.92490834091766E-19 - num21 * 7.0146496868477E-14 - num35 * 1.55466899839567E-17 - num36 * 6.73626664423579E-10 + num37 * 3.94238974311392E-08 + num6 * 2.56231684807206E-22 + num4 * 2.3546022059933E-20 - num26 * 4.71993571516344E-20 - num33 * 1.03912477559547E-19 - num1 * 2.02575168923003E-22 - num47 * 3.87501935927727E-08 - num54 * 0.00387319965721321 + num52 * 5.80174385215076E-13 + num56 * 3.42911175946504E-15 + 6.62254565291587E-08) + num143 * 3.87524725980269E-06;
                        numArray7[8] = num317;
                        double[] numArray8 = Ab[7];
                        double num318 = num146 * -0.00846502140735231;
                        numArray8[0] = num318;
                        double num319 = num267 * 6.30924921942919E-10;
                        numArray8[1] = num319;
                        numArray8[2] = 0.0;
                        double num320 = num228 * -6.30924921942919E-10;
                        numArray8[3] = num320;
                        double num321 = num270 * -0.173810618507572;
                        numArray8[4] = num321;
                        numArray8[5] = 0.0;
                        double num322 = num150 * 0.173810618192852 - num273 * 0.173810618507572;
                        numArray8[6] = num322;
                        double num323 = num152 * -0.991534978592648 - num153 * 0.00846502140735231 - 3.847736979589E-06;
                        numArray8[7] = num323;
                        double num324 = num156 * 6.30924921942919E-10 - num234 * 6.30924921942919E-10 + num158 * 0.173810618192852 - num279 * 0.173810618507572 - num160 * 0.991534978592648 - num161 * 0.00846502140735231 + num41 * 6.69971244862868E-10 + num40 * 1.8090190629522E-10 + num45 * 1.10335746477418E-16 - num27 * 1.28539354854475E-15 - num46 * 6.69617914559015E-16 - num15 * 1.73808808885516E-06 - num59 * 1.86771956181301E-16 + num42 * 1.73723717357905E-06 - num49 * 6.08614369576115E-17 + num5 * 8.24767997460719E-09 + num9 * 1.52798028291748E-15 + num21 * 1.80901472163812E-10 + num35 * 4.00935076008909E-14 - num36 * 9.09859525072055E-09 + num37 * 6.69964950454471E-10 - num6 * 6.60798344406957E-19 - num4 * 6.07230616552378E-17 + num26 * 1.21722873915223E-16 + num33 * 2.67980882950673E-16 + num1 * 5.22423042033229E-19 + num47 * 6.96402631141376E-15 - num54 * 1.48408225744463E-12 + num52 * 0.000822958375404907 - num56 * 8.8433691373722E-12 - 6.56063424684115E-08 - num144 * 3.847736979589E-06;
                        numArray8[8] = num324;
                        Simulation.RowReduce(Ab, 8, 8);
                        double[] numArray9 = Ab[7];
                        double num325 = -numArray9[8] / numArray9[7];
                        double[] numArray10 = Ab[6];
                        double num326 = -(numArray10[8] + numArray10[7] * num325) / numArray10[6];
                        double[] numArray11 = Ab[5];
                        double num327 = -(numArray11[8] + numArray11[6] * num326 + numArray11[7] * num325) / numArray11[5];
                        double[] numArray12 = Ab[4];
                        double num328 = -(numArray12[8] + numArray12[5] * num327 + numArray12[6] * num326 + numArray12[7] * num325) / numArray12[4];
                        double[] numArray13 = Ab[3];
                        double num329 = -(numArray13[8] + numArray13[4] * num328 + numArray13[5] * num327 + numArray13[6] * num326 + numArray13[7] * num325) / numArray13[3];
                        double[] numArray14 = Ab[2];
                        double num330 = -(numArray14[8] + numArray14[3] * num329 + numArray14[4] * num328 + numArray14[5] * num327 + numArray14[6] * num326 + numArray14[7] * num325) / numArray14[2];
                        double[] numArray15 = Ab[1];
                        double num331 = -(numArray15[8] + numArray15[2] * num330 + numArray15[3] * num329 + numArray15[4] * num328 + numArray15[5] * num327 + numArray15[6] * num326 + numArray15[7] * num325) / numArray15[1];
                        double[] numArray16 = Ab[0];
                        double num332 = -(numArray16[8] + numArray16[1] * num331 + numArray16[2] * num330 + numArray16[3] * num329 + numArray16[4] * num328 + numArray16[5] * num327 + numArray16[6] * num326 + numArray16[7] * num325) / numArray16[0];
                        double num333 = (num148 * num331 + num156) * 8.22146404415141E-11;
                        double num334 = (num150 * 6.32847339363927E-07 + 1.74103770544114E-16) * num326;
                        double num335 = num158 * 6.32847339363927E-07;
                        double num336 = (num154 * 13126.7693067704 + 1.33265892067613E-12) * num325;
                        double num337 = num146 * num332;
                        double num338 = num160 - num337 - num161;
                        double num339 = num338 * 13126.7693067704;
                        double num340 = num140 + num329;
                        double num341 = num340 * 5.38877091759676E-14;
                        double num342 = num143 - num46;
                        double num343 = num342 * 1.74103770544114E-16;
                        double num344 = num141 + num328;
                        double num345 = num344 * 1.34648195973661E-10;
                        double num346 = num144 * 1.33265892067613E-12;
                        double num347 = num43 * 8.21290893068195E-15;
                        double num348 = num41 * 5.26886009768897E-09;
                        double num349 = num40 * 0.13122357521704;
                        double num350 = num45 * 0.511319157101715;
                        double num351 = num27 * 0.689745194659409;
                        double num352 = num15 * 1.3388968986027E-12;
                        double num353 = num59 * 0.309692363713185;
                        double num354 = num42 * 1.36622943615267E-05;
                        double num355 = num49 * 0.0326583898986462;
                        double num356 = num5 * 1.42309226791951E-10;
                        double num357 = num9 * 0.590983408548113;
                        double num358 = num21 * 0.146678759760345;
                        double num359 = num35 * 2.90832391881738E-05;
                        double num360 = num36 * 1.36622880393927E-05;
                        double num361 = num37 * 5.26885927940125E-09;
                        double num362 = num6 * 0.00306227911863112;
                        double num363 = num4 * 0.0320171295162922;
                        double num364 = num26 * 0.0653167797972925;
                        double num365 = num33 * 0.444347399726219;
                        double num366 = num1 * 0.00242101873627706;
                        double num367 = num48 * 4.75284081636687E-17;
                        double num368 = num47 * 5.4880100668069E-14;
                        double num369 = num55 * 8.55511346946036E-14;
                        double num370 = num54 * 3.00317151085791E-13;
                        double num371 = num52 * 6.33947395171732E-10;
                        double num372 = num56 * 14663.4641909652;
                        double num373 = num333 + num334 + num335 + num336 + num339 + num341 + num343 + num345 + num346 + num347 + num348 + num349 + num350 - num351 + num352 + num353 + num354 - num355 + num356 + num357 - num358 + num359 + num360 + num361 - num362 - num363 + num364 - num365 - num138 + num366 - num367 + num368 + num369 - num370 - num371 + num372 + 0.0126867189121886;
                        double num374 = (num150 * 8.1138236143655E-07 + 2.17010832634792E-16) * num326;
                        double num375 = num158 * 8.1138236143655E-07;
                        double num376 = (num154 * 16830.0137776626 + 1.70862050733197E-12) * num325;
                        double num377 = num338 * 16830.0137776626;
                        double num378 = num164 + num69 - num330;
                        double num379 = num378 * 4.04810831356717E-20;
                        double num380 = num142 + num327;
                        double num381 = num380 * 1.24359416678146E-15;
                        double num382 = -num137;
                        double num383 = num382 - num331;
                        double num384 = num383 * 1.9576333750227E-15;
                        double num385 = num340 * 6.91257171018204E-14;
                        double num386 = num342 * 2.17010832634792E-16;
                        double num387 = num344 * 1.72634327975667E-10;
                        double num388 = num144 * 1.70862050733197E-12;
                        double num389 = num43 * 1.02369420250403E-14;
                        double num390 = num50 * 1.10822273185046E-15;
                        double num391 = num58 * 1.62822859606313E-15;
                        double num392 = num41 * 6.75527889456834E-09;
                        double num393 = num40 * 0.168243573665751;
                        double num394 = num45 * 0.0377848088519288;
                        double num395 = num27 * 0.358360928342979;
                        double num396 = num8 * 1.24360667905701E-15;
                        double num397 = num34 * 1.24202440033542E-15;
                        double num398 = num15 * 1.7166183054514E-12;
                        double num399 = num59 * 0.564444122434346;
                        double num400 = num42 * 1.75166179099665E-05;
                        double num401 = num38 * 1.25109723235474E-20;
                        double num402 = num49 * 0.0169678469859363;
                        double num403 = num5 * 1.82456641967902E-10;
                        double num404 = num30 * 2.45616740215084E-17;
                        double num405 = num14 * 4.35473137792323E-17;
                        double num406 = num16 * 1.84134491226462E-16;
                        double num407 = num9 * 1.07712337047467;
                        double num408 = num31 * 1.52928536290315E-18;
                        double num409 = num44 * 7.69599119340596E-17;
                        double num410 = num21 * 0.267312303899903;
                        double num411 = num35 * 3.72880260784022E-05;
                        double num412 = num36 * 1.75166098042708E-05;
                        double num413 = num37 * 6.75527787461742E-09;
                        double num414 = num25 * 1.25282762562523E-17;
                        double num415 = num6 * 0.00022629238420205;
                        double num416 = num4 * 0.0170152340251957;
                        double num417 = num26 * 0.033935693971873;
                        double num418 = num33 * 0.809865878148454;
                        double num419 = num138 + num373;
                        double num420 = num419 * 0.472949016723055;
                        double num421 = num1 * 0.000178905344942845;
                        double num422 = num12 * 1.2528274953026E-17;
                        double num423 = num48 * 5.92415626449089E-17;
                        double num424 = num47 * 7.03626788478387E-14;
                        double num425 = num51 * 2.75271365322567E-15;
                        double num426 = num53 * 2.75897319028668E-12;
                        double num427 = num55 * 4.75239786631443E-11;
                        double num428 = num54 * 3.74328912050317E-13;
                        double num429 = num52 * 8.12792758262973E-10;
                        double num430 = num56 * 26725.573978899;
                        double num431 = num374 + num375 + num376 + num377 + num379 + num381 + num384 + num385 + num386 + num387 + num388 + num389 - num390 - num391 + num392 + num393 - num394 - num395 + num396 + num397 + num398 + num399 + num400 + num401 - num402 + num403 + num404 - num405 - num406 + num407 - num408 + num409 - num410 + num411 + num412 + num413 - num414 + num415 - num416 + num417 - num136 - num418 + num420 - num421 + num422 - num423 + num424 + num425 + num426 - num427 - num428 - num429 + num430 + 0.0162658190370834;
                        double num432 = (num150 * 7.3395895664011 + 0.00165054575352707) * num326;
                        double num433 = num158 * 7.3395895664011;
                        double num434 = num378 * 1.29520735847004E-05;
                        double num435 = num380 * 0.397892593527573;
                        double num436 = num137 + num331;
                        double num437 = num436 * 0.520313096210064;
                        double num438 = -num140 - num329;
                        double num439 = num438 * 0.00944461088246703;
                        double num440 = num342 * 0.00165054575352707;
                        double num441 = -num141;
                        double num442 = (num441 - num328) * 8.89309521651363E-05;
                        double num443 = num144 + num325;
                        double num444 = num443 * 1.54712069393125E-05;
                        double num445 = -num135;
                        double num446 = num445 - num332;
                        double num447 = num446 * 1.66068093581397E-06;
                        double num448 = num43 * 0.0778603583212284;
                        double num449 = num50 * 0.625669646644769;
                        double num450 = num58 * 0.504417397295019;
                        double num451 = num41 * 0.00779108876889724;
                        double num452 = num40 + num21;
                        double num453 = num452 * 3.11681315514736E-07;
                        double num454 = num45 * 6.82127657515267E-08;
                        double num455 = num27 * 6.46947564439286E-07;
                        double num456 = num8 * 0.397896596876819;
                        double num457 = num34 * 0.397390340896344;
                        double num458 = num15 * 1.5535851954648E-05;
                        double num459 = -num59 + num136 + num431;
                        double num460 = num459 * 6.41692280226556E-07;
                        double num461 = num42 * 7.63635381847775E-05;
                        double num462 = num38 * 4.00293227351777E-06;
                        double num463 = num49 * 0.0459341875335289;
                        double num464 = num5 * 7.27644515655375E-08;
                        double num465 = num30 * 0.0138667918139355;
                        double num466 = num14 * 0.0393559218103904;
                        double num467 = num16 * 0.064834189257051;
                        double num468 = num9 * 1.22453005896317E-06;
                        double num469 = num31 * 0.000489300557644238;
                        double num470 = num44 * 0.0434492810169978;
                        double num471 = num35 * 4.86050417568282E-10;
                        double num472 = num36 * 3.0412024258548E-06;
                        double num473 = num37 * 3.35237273200016E-05;
                        double num474 = num25 * 0.00400846873134789;
                        double num475 = num6 * 4.08524744836468E-10;
                        double num476 = num4 * 3.07175345868882E-08;
                        double num477 = num26 * 6.12639739052354E-08;
                        double num478 = num33 * 9.20701733566569E-07;
                        double num479 = num419 * 6.75056860034337E-08;
                        double num480 = num1 * 3.22977110565941E-10;
                        double num481 = num12 * 0.00400846831437578;
                        double num482 = num48 * 0.000450580777321923;
                        double num483 = num47 * 3.65000873627148E-05;
                        double num484 = num51 * 0.880741003759628;
                        double num485 = num53 * 882.743765996709;
                        double num486 = num55 * 17697.6667904803;
                        double num487 = num54 * 2.84707905455962;
                        double num488 = num52 * 0.00735599050882956;
                        double num489 = num56 * 0.0303831572076968;
                        double num490 = num432 + num433 + num434 + num435 + num437 + num439 + num440 + num442 + num444 + num447 + num448 + num449 + num450 + num451 + num453 - num454 - num455 + num456 + num457 + num458 + num460 + num461 + num462 - num463 - num134 - num464 - num465 + num466 + num467 - num468 - num469 - num470 + num471 + num472 + num473 - num474 + num475 - num476 + num477 + num478 + num479 - num480 + num481 - num482 - num483 + num484 + num485 + num486 - num487 - num488 - num489 + 7.83422229731001E-07;
                        double num491 = (num150 * 3.92816563928475 + 4.80667685790162E-16) * num326;
                        double num492 = num158 * 3.92816563928475;
                        double num493 = num378 * 4.60884063744327E-21;
                        double num494 = num380 * 1.41585325499831E-16;
                        double num495 = num383 * 7.93624630656425E-15;
                        double num496 = num340 * 1.5671005161357E-13;
                        double num497 = num342 * 4.80667685790162E-16;
                        double num498 = num344 * 0.000835779923251595;
                        double num499 = -num144 - num325;
                        double num500 = num499 * 0.00175936168092023;
                        double num501 = num135 + num332;
                        double num502 = num501 * 0.190678108016253;
                        double num503 = num43 * 2.26742931355182E-14;
                        double num504 = num50 * 6.72009835838952E-15;
                        double num505 = num58 * 7.08285175207643E-15;
                        double num506 = num41 * 1.53082090097709E-08;
                        double num507 = num452 * 0.00415481964345973;
                        double num508 = num45 * 0.0449728945812445;
                        double num509 = num27 * 0.248585092367229;
                        double num510 = num8 * 1.4158675004383E-16;
                        double num511 = num34 * 1.4140660490178E-16;
                        double num512 = num15 * 0.000875061166159095;
                        double num513 = num459 * 0.00877792062972492;
                        double num514 = num42 * 3.96945934006803E-05;
                        double num515 = num38 * 1.42439562364088E-21;
                        double num516 = num49 * 0.0117701274795097;
                        double num517 = num134 + num490;
                        double num518 = num517 * 6.72678163120569E-15;
                        double num519 = num5 * 4.14369552208606E-06;
                        double num520 = num30 * 1.48938350141612E-16;
                        double num521 = num14 * 3.63421720968526E-16;
                        double num522 = num16 * 8.53394554487819E-16;
                        double num523 = num9 * 0.0167507522290283;
                        double num524 = num31 * 1.74111757414524E-19;
                        double num525 = num44 * 4.66673497110383E-16;
                        double num526 = num35 * 9.20837686936996E-07;
                        double num527 = num36 * 3.7303450289054E-06;
                        double num528 = num37 * 1.53082067506327E-08;
                        double num529 = num25 * 1.42636570601171E-18;
                        double num530 = num6 * 0.000269341670594101;
                        double num531 = num4 * 0.0117137256506821;
                        double num532 = num26 * 0.0235402549590179;
                        double num533 = num33 * 0.0125945830890222;
                        double num534 = num419 * 0.0711352978469849;
                        double num535 = num1 * 0.000212939841767256;
                        double num536 = num12 * 1.42636555763717E-18;
                        double num537 = num48 * 1.31216974163878E-16;
                        double num538 = num47 * 1.59449857422574E-13;
                        double num539 = num51 * 3.13401163346143E-16;
                        double num540 = num53 * 3.14113822359777E-13;
                        double num541 = num55 * 2.26742931355182E-10;
                        double num542 = num54 * 8.29119033805909E-13;
                        double num543 = num52 * 0.414328203673814;
                        double num544 = num56 * 415.621241937733;
                        double num545 = num491 + num492 + num493 + num494 + num495 + num496 + num497 + num498 + num500 + num502 + num503 - num504 - num505 + num506 + num507 - num508 + num509 + num510 + num511 - num512 + num513 + num514 + num515 + num516 + num518 + num519 + num520 - num521 - num522 - num523 - num524 + num525 + num526 - num527 + num528 - num529 + num530 - num133 + num531 - num532 + num533 + num534 - num535 + num536 - num537 + num538 + num539 + num540 - num541 - num542 + num543 - num544 + 0.000368650310067351;
                        double num546 = (num150 * 4446.76429756497 + 5.38196258089205E-13) * num326;
                        double num547 = num158 * 4446.76429756497;
                        double num548 = num378 * 5.16044838987636E-18;
                        double num549 = num380 * 1.58530924039727E-13;
                        double num550 = num383 * 8.88609363961236E-12;
                        double num551 = num340 * 1.75465848603371E-10;
                        double num552 = num342 * 5.38196258089205E-13;
                        double num553 = num344 * 0.946120063311158;
                        double num554 = num443 * 0.0093737952879527;
                        double num555 = num446 * 0.00105022379847282;
                        double num556 = num43 * 2.53880593206364E-11;
                        double num557 = num50 * 7.52439137765452E-12;
                        double num558 = num58 * 7.93056080585421E-12;
                        double num559 = num41 * 1.71403675567715E-05;
                        double num560 = num452 * 0.000187685202491098;
                        double num561 = num45 * 3.09300125736116E-05;
                        double num562 = num27 * 0.000449430742497648;
                        double num563 = num8 * 1.58532519079859E-13;
                        double num564 = num34 * 1.5833081331883E-13;
                        double num565 = num15 * 0.0094127566864141;
                        double num566 = num459 * 0.000386746425687193;
                        double num567 = num42 * 0.0444454292771928;
                        double num568 = num38 * 1.59487399994853E-18;
                        double num569 = num49 * 2.12798638813172E-05;
                        double num570 = num517 * 7.53187453603563E-12;
                        double num571 = num5 * 4.41050035132778E-05;
                        double num572 = num30 * 1.66763993299081E-13;
                        double num573 = num14 * 4.06917744037794E-13;
                        double num574 = num16 * 9.55532833758156E-13;
                        double num575 = num9 * 0.00073802138367969;
                        double num576 = num31 * 1.9495027250644E-16;
                        double num577 = num44 * 5.22527179003786E-13;
                        double num578 = num35 * 4.15968977152257E-08;
                        double num579 = num36 * 2.23542782780133E-05;
                        double num580 = num37 * 1.71403650272491E-05;
                        double num581 = num25 * 1.59707987105544E-15;
                        double num582 = num6 * 1.85239160957795E-07;
                        double num583 = num133 + num545;
                        double num584 = num583 * 0.000231192309150564;
                        double num585 = num4 * 2.13186549393805E-05;
                        double num586 = num26 * 4.25597294031864E-05;
                        double num587 = num33 * 0.000554904765965325;
                        double num588 = num419 * 2.44530746718712E-05;
                        double num589 = num1 * 1.46448923170509E-07;
                        double num590 = num12 * 1.59707970492273E-15;
                        double num591 = num48 * 1.46921639587016E-13;
                        double num592 = num47 * 1.7853356727448E-10;
                        double num593 = num51 * 3.50910490511592E-13;
                        double num594 = num53 * 3.51708443912186E-10;
                        double num595 = num55 * 2.53880593206364E-07;
                        double num596 = num54 * 9.2835190443753E-10;
                        double num597 = num52 * 4.45679767349152;
                        double num598 = num56 * 18.3118572768557;
                        double num599 = num546 + num547 + num548 + num549 + num550 + num551 + num552 + num553 + num554 + num555 + num556 - num557 - num558 + num559 + num560 - num561 - num562 + num563 + num564 + num565 + num566 + num567 + num568 - num569 + num570 - num132 - num571 + num572 - num573 - num574 - num575 - num576 + num577 + num578 + num579 + num580 - num581 + num582 + num584 - num585 + num586 + num587 + num588 - num589 + num590 - num591 + num592 + num593 + num594 - num595 - num596 - num597 - num598 + 0.000373491593965679;
                        double num600 = num378 * 3.1264424012708E-23;
                        double num601 = num380 * 9.60454916675018E-19;
                        double num602 = num383 * 5.38361356176891E-17;
                        double num603 = num340 * 1.06305465649989E-15;
                        double num604 = (num143 - num141 - num46 + num326 - num328) * 3.26064611903945E-18;
                        double num605 = num499 * 0.00110036827237935;
                        double num606 = num501 * 0.118698882072159;
                        double num607 = num43 * 1.53812806851689E-16;
                        double num608 = num50 * 4.55863027193635E-17;
                        double num609 = num58 * 4.80470681926014E-17;
                        double num610 = num41 * 1.03844410125262E-10;
                        double num611 = num452 * 0.00258629778072817;
                        double num612 = num45 * 0.93820220306151;
                        double num613 = num27 * 0.811452083281164;
                        double num614 = num8 * 9.60464580178507E-19;
                        double num615 = num34 * 9.59242551788303E-19;
                        double num616 = num15 * 0.00054990714395485;
                        double num617 = num459 * 0.00546409734519297;
                        double num618 = num42 * 2.69271319344069E-07;
                        double num619 = num38 * 9.66249697973033E-24;
                        double num620 = num49 * 0.0384210266705097;
                        double num621 = num517 * 4.56316392131922E-17;
                        double num622 = num132 + num599;
                        double num623 = num622 * 0.000549907146759763;
                        double num624 = num5 * 2.60372981227156E-06;
                        double num625 = num30 * 1.01033472339015E-18;
                        double num626 = num14 * 2.46529912262081E-18;
                        double num627 = num16 * 5.78906742508769E-18;
                        double num628 = num9 * 0.0104270412829786;
                        double num629 = num31 * 1.1811004627023E-21;
                        double num630 = num44 * 3.16571546662246E-18;
                        double num631 = num35 * 5.73204295374151E-07;
                        double num632 = num36 * 2.33445568801791E-06;
                        double num633 = num37 * 1.03844394800225E-10;
                        double num634 = num25 * 9.6758611846198E-21;
                        double num635 = num6 * 0.0056188722358342;
                        double num636 = num583 * 0.418666886468316;
                        double num637 = num4 * 0.0372443997143228;
                        double num638 = num26 * 0.0768420533410193;
                        double num639 = num33 * 0.00783990091998533;
                        double num640 = num419 * 0.0488569521107565;
                        double num641 = num1 * 0.0044422452796473;
                        double num642 = num12 * 9.6758601781097E-21;
                        double num643 = num48 * 8.90120410021346E-19;
                        double num644 = num47 * 1.08164033937842E-15;
                        double num645 = num51 * 2.12598083286415E-18;
                        double num646 = num53 * 2.1308152099519E-15;
                        double num647 = num55 * 1.53812806851689E-12;
                        double num648 = num54 * 5.62439256834335E-15;
                        double num649 = num52 * 0.260372700736198;
                        double num650 = num56 * 258.716730359516;
                        double num651 = num600 + num601 + num602 + num603 + num604 + num605 + num606 + num607 - num608 - num609 + num610 + num611 + num612 - num613 + num614 + num615 - num616 + num617 + num618 + num619 - num620 + num621 + num623 + num624 + num625 - num626 - num627 - num628 - num629 + num630 + num631 - num632 + num633 - num634 - num101 - num635 + num636 - num637 + num638 + num639 + num640 + num641 + num642 - num643 + num644 + num645 + num646 - num647 - num648 + num649 - num650 + 0.000229281718149661;
                        double num652 = num164 - num330;
                        double num653 = num652 * 2.87670599603456E-08;
                        double num654 = num380 * 0.000883734949537801;
                        double num655 = num69 * 0.942518575497952;
                        double num656 = num383 * 0.0495357707763257;
                        double num657 = num340 * 0.978139147301313;
                        double num658 = (num143 - num141 + num326 - num328) * 0.00769361513416583;
                        double num659 = num499 * 4.84286330264195E-17;
                        double num660 = num501 * 5.22409155626497E-15;
                        double num661 = num43 * 0.141526427468264;
                        double num662 = num50 * 0.0419449244663953;
                        double num663 = num58 * 0.0442091269953851;
                        double num664 = num41 * 0.0141617760231984;
                        double num665 = num452 * 5.68654304402317E-10;
                        double num666 = -num45;
                        double num667 = num666 + num33;
                        double num668 = num667 * 3.4504419488257E-16;
                        double num669 = num8 * 0.00088374384113242;
                        double num670 = num46 * 0.992306384865834;
                        double num671 = num34 * 0.000882619426879338;
                        double num672 = num15 * 2.42021257261539E-17;
                        double num673 = num459 * 2.40482002065356E-16;
                        double num674 = num42 * 5.4609156516724E-06;
                        double num675 = num38 * 8.8906685077447E-09;
                        double num676 = num49 * 0.00457265085503663;
                        double num677 = num517 * 0.0419866395364005;
                        double num678 = num622 * 0.00769361519105039;
                        double num679 = num5 * 5.68845381528476E-11;
                        double num680 = num30 * 0.000929630418138193;
                        double num681 = num14 * 0.00226837403599035;
                        double num682 = num16 * 0.00532664378094059;
                        double num683 = num9 * 5.46457355833032E-15;
                        double num684 = num31 * 1.08675559850194E-06;
                        double num685 = num44 * 0.002912841976833;
                        double num686 = num35 * 1.05214284198633E-12;
                        double num687 = num76 * 5.73062374733948E-10;
                        double num688 = num74 * 5.50324844770648E-06;
                        double num689 = num36 * 5.46091565167229E-06;
                        double num690 = num37 * 0.021998215107381;
                        double num691 = num77 * 0.942518604265012;
                        double num692 = num73 * 0.014271557534965;
                        double num693 = num72 * 6.01211528107868E-18;
                        double num694 = num25 * 8.90296519624986E-06;
                        double num695 = num101 + num651;
                        double num696 = num695 * 3.47110656931406E-16;
                        double num697 = num6 * 2.06646204883653E-18;
                        double num698 = -num133 - num4 - num545;
                        double num699 = num698 * 4.32730065491033E-19;
                        double num700 = num75 * 1.26989702601528E-13;
                        double num701 = -num138 - num1 - num373;
                        double num702 = num701 * 1.6337319833455E-18;
                        double num703 = num12 * 8.90296427013856E-06;
                        double num704 = num48 * 0.00081901867747838;
                        double num705 = num47 * 0.0219927535660586;
                        double num706 = num51 * 0.0019561600773035;
                        double num707 = num53 * 1.96060829024667;
                        double num708 = num55 * 1415.26427468264;
                        double num709 = num54 * 2200.7348383753;
                        double num710 = num52 * 1.14593398324592E-14;
                        double num711 = num56 * 1.13864584311248E-11;
                        double num712 = num653 + num654 - num655 + num656 + num657 + num658 + num659 + num660 + num661 - num662 - num663 + num664 + num665 + num668 + num669 + num670 + num671 - num672 + num673 + num674 + num675 + num676 + num677 + num678 + num679 + num680 - num681 - num682 - num88 + num683 - num684 + num685 + num686 + num687 + num688 + num689 - num690 + num691 + num692 + num693 - num694 + num696 + num697 + num699 + num700 + num702 + num703 - num704 + num705 + num706 + num707 - num708 + num709 + num710 - num711 + 4.20857136794532E-10;
                        double num713 = (num139 + num330) * 1.60316011627669E-06;
                        double num714 = -num142;
                        double num715 = (num714 - num327) * 0.0492496844102862;
                        double num716 = num69 * 0.000508924086779745;
                        double num717 = num436 * 0.00134053301712279;
                        double num718 = num438 * 0.000553667591964628;
                        double num719 = num499 * 4.10366986374366E-20;
                        double num720 = num501 * 4.42670910681851E-18;
                        double num721 = num43 * 0.000119924453578523;
                        double num722 = num50 * 0.00287591518459326;
                        double num723 = num58 * 0.00129751385881102;
                        double num724 = num41 + num37;
                        double num725 = num724 * 1.200018457093E-05;
                        double num726 = num452 * 4.81857402539292E-13;
                        double num727 = num667 * 2.92378160545405E-19;
                        double num728 = num8 * 0.950749820069842;
                        double num729 = -num46 + num88 + num712;
                        double num730 = num729 * 0.000541662779478117;
                        double num731 = num34 * 0.049187517423555;
                        double num732 = num15 * 2.05080192799933E-20;
                        double num733 = num459 * 2.03775882773725E-19;
                        double num734 = num42 * 4.62738540978202E-09;
                        double num735 = num38 * 4.95468260513971E-07;
                        double num736 = num49 * 5.6690046032488E-05;
                        double num737 = num517 * 0.0477067508074438;
                        double num738 = num622 * 4.82019518599154E-14;
                        double num739 = num5 * 4.82019314489985E-14;
                        double num740 = num30 * 6.37392549776875E-05;
                        double num741 = num14 * 0.000309654518880779;
                        double num742 = num16 * 4.3019158311767E-05;
                        double num743 = num9 * 4.63048498959224E-18;
                        double num744 = num31 * 6.05638266148973E-05;
                        double num745 = num44 * 0.000199716332263421;
                        double num746 = num35 * 5.16111703422349E-11;
                        double num747 = num76 * 3.10406558712721E-13;
                        double num748 = num74 * 2.98090485034332E-09;
                        double num749 = num36 * 4.62738540978193E-09;
                        double num750 = num77 * 0.000510527246896022;
                        double num751 = num73 * 7.73037152187102E-06;
                        double num752 = num72 * 3.25653907369194E-21;
                        double num753 = num25 * 0.00957799216950586;
                        double num754 = num695 * 2.94129206879865E-19;
                        double num755 = num6 * 1.75104633445968E-21;
                        double num756 = num698 * 3.6668004399848E-22;
                        double num757 = num75 * 6.87855952762433E-17;
                        double num758 = num701 * 1.3843662904612E-21;
                        double num759 = num12 * 0.00957799222111714;
                        double num760 = num48 * 6.94007254505344E-07;
                        double num761 = num47 * 1.20048124865108E-05;
                        double num762 = num51 * 0.109014887906815;
                        double num763 = num53 * 2107.04927427398;
                        double num764 = -num55 - num54;
                        double num765 = num764 * 1.19924453578523;
                        double num766 = num52 * 9.71023640151198E-18;
                        double num767 = num56 * 9.64847929799836E-15;
                        double num768 = num713 + num715 + num716 + num717 + num718 + num719 + num720 + num721 - num722 + num723 + num725 + num726 + num727 - num129 + num728 + num730 - num731 - num732 + num733 + num734 - num735 - num736 + num737 + num738 + num739 + num740 - num741 + num742 + num743 + num744 + num745 - num746 - num747 - num748 + num749 - num750 - num751 - num752 - num753 + num754 + num755 + num756 - num757 + num758 + num759 - num760 - num761 - num762 + num763 + num765 + num766 - num767 - 2.0644468136894E-08;
                        double num769 = num652 * 1.49057301924833E-22;
                        double num770 = num380 * 4.57909662566714E-18;
                        double num771 = num69 * 2.96790476148599E-15;
                        double num772 = num383 * 2.44023370287147E-16;
                        double num773 = num340 * 4.81839533355906E-15;
                        double num774 = num499 * 0.00817570475621932;
                        double num775 = num501 * 0.881929295013976;
                        double num776 = num43 * 6.97170114000165E-16;
                        double num777 = -num50 + num134 + num490;
                        double num778 = num777 * 2.06610918520494E-16;
                        double num779 = num58 * 2.17783693685823E-16;
                        double num780 = num724 * 7.71560949192048E-10;
                        double num781 = num452 * 0.0192161184556666;
                        double num782 = num667 * 0.0582502393505171;
                        double num783 = num129 + num768;
                        double num784 = num783 * 4.58371601422071E-18;
                        double num785 = num8 * 4.57331651473694E-21;
                        double num786 = num729 * 3.14890825390455E-15;
                        double num787 = num34 * 4.57331651473694E-18;
                        double num788 = num15 * 0.0040857943337362;
                        double num789 = num459 * 0.0405980868177364;
                        double num790 = num42 * 2.00067819250588E-06;
                        double num791 = num38 + num25;
                        double num792 = num791 * 4.60672401663317E-23;
                        double num793 = num49 * 2.25255089405977E-17;
                        double num794 = num622 * 0.0040857943545766;
                        double num795 = num5 * 1.93456379508912E-05;
                        double num796 = num30 * 4.57914269770598E-18;
                        double num797 = num14 * 1.11727751653288E-17;
                        double num798 = num16 * 2.62396766013244E-17;
                        double num799 = num9 * 0.0774726181682872;
                        double num800 = num31 * 5.63105362827145E-21;
                        double num801 = num44 * 1.43479804528121E-17;
                        double num802 = num35 * 4.25889150169915E-06;
                        double num803 = num76 * 1.80452084180187E-24;
                        double num804 = num74 * 1.73292244602703E-20;
                        double num805 = num36 * 1.73449389179875E-05;
                        double num806 = num77 * 2.96790461242869E-15;
                        double num807 = num73 * 4.4939825317925E-17;
                        double num808 = num72 * 1.89315994320143E-32;
                        double num809 = num695 * 0.058599098745165;
                        double num810 = num6 * 0.00034885939464785;
                        double num811 = num698 * 7.30533371169926E-05;
                        double num812 = num75 * 3.99878922682836E-28;
                        double num813 = num701 * 0.000275806057530858;
                        double num814 = num12 * 4.60720388371823E-23;
                        double num815 = num48 * 4.03454927083429E-18;
                        double num816 = num47 * 7.96730358746361E-15;
                        double num817 = num51 * 1.01358965308886E-17;
                        double num818 = num764 * 6.97170114000165E-12;
                        double num819 = num52 * 1.93456171104934;
                        double num820 = num56 * 1922.25789856707;
                        double num821 = num769 + num770 + num771 + num772 + num773 + num774 + num775 + num776 + num778 - num779 + num780 + num781 + num782 + num784 - num785 + num786 + num787 - num788 + num789 + num790 + num792 + num793 + num794 + num795 + num796 - num797 - num798 - num128 - num799 - num800 + num801 + num802 - num803 - num804 - num805 - num806 - num807 - num808 + num809 + num810 + num811 - num812 + num813 - num814 - num815 + num816 + num817 + num818 + num819 - num820 + 0.00170355660067966;
                        double num822 = -num127 + num419 * (1.0 / 331.0);
                        double num823 = (num144 - num135 + num128 + num325 - num332 + num821) * 0.0010064007085061;
                        double num824 = (-num15 + num132 + num599) * 0.998993599291494;
                        double num825 = (num5 - num36) * 0.00473008332997866;
                        double num826 = num52 * 473.008332997866;
                        double num827 = num823 + num824 + num825 - num111 + num826;
                        double num828 = num378 * 3.25513555189067E-05;
                        double num829 = num380 * 0.999989938719564;
                        double num830 = num129 - num8 + num768;
                        double num831 = num830 * 0.000998727669488887;
                        double num832 = num34 * 0.998727669488887;
                        double num833 = num791 * 1.00602324949188E-05;
                        double num834 = (num49 - num31) * 0.0012297178751587;
                        double num835 = num35 * 1.04794088488737E-09;
                        double num836 = num12 * 1.00612804358037E-05;
                        double num837 = num51 * 2.21349217528565;
                        double num838 = num828 + num829 + num831 + num832 + num833 + num834 + num835 - num125 - num836 + num837 + 4.19176353954949E-07;
                        double num839 = num69 - num77;
                        double num840 = num839 * 3.28503821961098E-17;
                        double num841 = num383 * 2.70098336218284E-18;
                        double num842 = num340 * 5.33326197939491E-17;
                        double num843 = num43 * 7.71665794267878E-18;
                        double num844 = num777 * 2.28688200114807E-18;
                        double num845 = num58 * 2.41054835243013E-18;
                        double num846 = num724 * 8.54005616029919E-12;
                        double num847 = num452 * 0.000212694448787489;
                        double num848 = num129 + num30 + num768;
                        double num849 = num848 * 5.06844415148066E-20;
                        double num850 = num729 * 3.48538289296973E-17;
                        double num851 = (num42 + num36) * 2.21445942029309E-08;
                        double num852 = num17 * 2.112;
                        double num853 = num791 * 9.99891110343097E-05;
                        double num854 = num49 * 2.4926225475666E-19;
                        double num855 = num132 + num5 + num599;
                        double num856 = num855 * 2.3067285628053E-13;
                        double num857 = num14 * 1.23666351282061E-19;
                        double num858 = num16 * 2.90435009752705E-19;
                        double num859 = num128 + num9 + num821;
                        double num860 = num859 * 2.21556717486967E-09;
                        double num861 = num44 * 1.58811250079727E-19;
                        double num862 = num35 * 0.000312708402187284;
                        double num863 = num76 * 1.99734179750231E-26;
                        double num864 = num74 * 1.91809279953984E-22;
                        double num865 = num73 * 4.97418424884003E-19;
                        double num866 = num72 * 2.09545237512335E-34;
                        double num867 = num75 * 4.4260773703068E-30;
                        double num868 = num125 + num838;
                        double num869 = num868 * 4.73433290932833E-10;
                        double num870 = num12 * 4.73433290882148E-10;
                        double num871 = num48 * 4.46565853164282E-20;
                        double num872 = num47 * 8.81864487236463E-17;
                        double num873 = num764 * 7.71665794267878E-14;
                        double num874 = num840 + num841 + num842 + num843 + num844 - num845 + num846 + num847 + num849 + num850 + num851 + num852 + num853 + num854 + num856 - num857 - num858 + num860 + num861 - num862 - num863 - num864 - num865 - num866 - num867 + num869 + num870 - num871 + num872 - num124 - num13 + num873 - 844.925083360875;
                        double num875 = -num69 + num77;
                        double num876 = num875 * 0.220776927126551;
                        double num877 = num436 * 0.299020305666466;
                        double num878 = num438 * 0.123501510572428;
                        double num879 = num43 * 0.0267504390476713;
                        double num880 = num777 * 0.641503809741031;
                        double num881 = num58 * 0.289424419773623;
                        double num882 = num41 + num37 + num73;
                        double num883 = num882 * 0.0026767702194722;
                        double num884 = num452 * 1.07483456452629E-10;
                        double num885 = num848 * 0.0142177262797214;
                        double num886 = num729 * 0.120823708046617;
                        double num887 = num42 + num74 + num36;
                        double num888 = num887 * 1.03218807891758E-06;
                        double num889 = num17 + num35 + num75;
                        double num890 = num889 * 2.38181609309706E-14;
                        double num891 = num38 + num72 + num25;
                        double num892 = num891 * 1.127631031231E-18;
                        double num893 = num49 * 0.000864088417846656;
                        double num894 = num855 * 1.07519591553915E-11;
                        double num895 = num14 * 0.0690717704853456;
                        double num896 = num16 * 0.00959588589284289;
                        double num897 = num859 * 1.11961933804822E-15;
                        double num898 = num44 * 0.0445488756764605;
                        double num899 = num76 * 1.07483454053959E-10;
                        double num900 = num868 * 0.0142177262797214;
                        double num901 = num12 * 5.33916207969224E-24;
                        double num902 = num48 * 0.000154805781525875;
                        double num903 = num47 * 0.00267780252581147;
                        double num904 = -num874 - num124 - num13;
                        double num905 = num904 * 1.12775383195883E-14;
                        double num906 = num764 * 267.504390476713;
                        double num907 = num876 + num877 + num878 + num879 + num880 + num881 + num883 + num884 + num885 + num886 + num888 + num890 + num892 + num893 + num894 - num91 - num895 + num896 + num897 + num898 + num899 + num900 + num901 - num902 - num903 + num905 + num906;
                        double num908 = -num126;
                        double num909 = num908 + num132 - num111 + num599 - num827;
                        double num910 = num875 * 0.573242698255334;
                        double num911 = num436 * 0.969637854676003;
                        double num912 = num438 * 0.400480293449599;
                        double num913 = num43 * 0.0867440700122796;
                        double num914 = num777 * 0.0257071719248121;
                        double num915 = num58 * 0.0270973232977846;
                        double num916 = num882 * 0.0086800049491111;
                        double num917 = num452 * 3.48538297075177E-10;
                        double num918 = num848 * 0.000569751150815871;
                        double num919 = num729 * 0.391796941024463;
                        double num920 = num887 * 3.34709254019746E-06;
                        double num921 = num889 * 7.72355255806432E-14;
                        double num922 = num891 * 3.65658690486563E-18;
                        double num923 = num49 * 0.0028019931217172;
                        double num924 = num855 * 3.48655472937235E-11;
                        double num925 = num14 * 0.00139015137297252;
                        double num926 = num16 * 0.00326482202621255;
                        double num927 = num859 * 3.63060726119976E-15;
                        double num928 = num44 * 0.0017852202725564;
                        double num929 = num76 * 3.48538289296973E-10;
                        double num930 = num868 * 0.000569751150815871;
                        double num931 = num12 * 1.73133849662198E-23;
                        double num932 = num48 * 0.000501991145904396;
                        double num933 = num47 * 0.00868335242513602;
                        double num934 = num904 * 3.65698511271985E-14;
                        double num935 = num764 * 867.440700122796;
                        double num936 = num910 + num911 + num912 + num913 + num914 - num915 + num916 + num917 + num918 + num919 + num920 + num921 + num922 + num923 + num924 - num925 - num90 - num926 + num927 + num928 + num929 + num930 + num931 - num932 - num933 + num934 + num935;
                        double num937 = num839 * 1.5551855587215E-17;
                        double num938 = num383 * 1.27868537240679E-18;
                        double num939 = num340 * 2.52484490491426E-17;
                        double num940 = num43 * 3.65317971718112E-18;
                        double num941 = num777 * 1.08264367868048E-18;
                        double num942 = num58 * 1.14118915387937E-18;
                        double num943 = num882 * 4.04298858134463E-12;
                        double num944 = num452 * 0.00010069269002712;
                        double num945 = num848 * 2.39947623821028E-20;
                        double num946 = num729 * 1.6500316828592E-17;
                        double num947 = num887 * 1.04835776042278E-08;
                        double num948 = num17 * 0.999851959228885;
                        double num949 = num891 * 4.73363203452695E-05;
                        double num950 = num49 * 1.18004428873227E-19;
                        double num951 = num855 * 1.09203933377373E-13;
                        double num952 = num14 * 5.85454751988902E-20;
                        double num953 = num16 * 1.37496218527416E-19;
                        double num954 = num859 * 1.0488821877825E-09;
                        double num955 = num44 * 7.51835887972556E-20;
                        double num956 = (-num35 - num75) * 0.000148040771114721;
                        double num957 = num76 * 9.45571074565544E-27;
                        double num958 = num868 * 2.24130304689096E-10;
                        double num959 = num12 * 2.24130304665102E-10;
                        double num960 = num48 * 2.11410863262796E-20;
                        double num961 = num47 * 4.17487658777346E-17;
                        double num962 = num904 * 0.473414753422768;
                        double num963 = num764 * 3.65317971718112E-14;
                        double num964 = num937 + num938 + num939 + num940 + num941 - num942 + num943 + num944 + num945 + num946 + num947 - num122 + num948 + num949 + num950 + num951 - num952 - num953 + num954 + num955 + num956 - num957 + num958 + num959 - num960 + num961 + num962 + num963;
                        double num965 = num875 * 7.59190617801471E-07;
                        double num966 = num383 * 1.99346870444311E-06;
                        double num967 = num340 * 8.23343403816189E-07;
                        double num968 = num43 * 1.78336260317809E-07;
                        double num969 = num50 - num134 - num490;
                        double num970 = num969 * 4.27669206494021E-06;
                        double num971 = num58 * 1.92949613182415E-06;
                        double num972 = (-num41 - num37 - num73) * 1.78451347964813E-08;
                        double num973 = (-num40 - num21) * 7.16556376350861E-16;
                        double num974 = -num129;
                        double num975 = (num974 - num30 - num768) * 9.47848418648096E-08;
                        double num976 = num46 - num88 - num712;
                        double num977 = num976 * 8.05491386977446E-07;
                        double num978 = (-num42 - num74 - num36) * 6.88125385945056E-12;
                        double num979 = (-num17 - num35 - num75) * 1.58787739539804E-19;
                        double num980 = (-num38 - num72 - num25) * 7.51754020820667E-24;
                        double num981 = num49 * 5.76058945231104E-09;
                        double num982 = -num132;
                        double num983 = (num982 - num5 - num599) * 7.167972770261E-17;
                        double num984 = num14 * 4.60478469902304E-07;
                        double num985 = num16 * 6.39725726189526E-08;
                        double num986 = -num128;
                        double num987 = (num986 - num9 - num821) * 7.46412892032147E-21;
                        double num988 = num44 * 2.96992504509737E-07;
                        double num989 = num76 * 4.61596807049037E-16;
                        double num990 = (-num125 - num838) * 9.47848418648096E-08;
                        double num991 = num12 * 3.55944138646149E-29;
                        double num992 = num48 * 1.03203854350584E-09;
                        double num993 = num47 * 1.78520168387432E-08;
                        double num994 = (num874 + num124 + num13) * 7.51835887972556E-20;
                        double num995 = num55 + num54;
                        double num996 = num995 * 0.00178336260317809;
                        double num997 = num965 + num966 + num967 - num968 + num970 - num971 + num972 + num973 + num975 + num977 + num978 + num979 + num980 - num981 + num983 + num984 - num985 + num987 - num988 + num989 + num990 - num991 + num992 + num993 + num994 - num121 + num996;
                        double num998 = num143 - num141 + num132 - num95 + num326 - num328 + num599;
                        double num999 = num441 + num132 - num89 - num328 + num599;
                        double num1000 = num839 * 1.54396799767334E-13;
                        double num1001 = num383 * 1.26946220855607E-14;
                        double num1002 = num340 * 2.50663318625524E-13;
                        double num1003 = num43 * 3.62682931399768E-14;
                        double num1004 = num777 * 1.07483456452629E-14;
                        double num1005 = num58 * 1.13295775092597E-14;
                        double num1006 = num882 * 4.01382648491575E-08;
                        double num1007 = num40 * 0.999663931610338;
                        double num1008 = num848 * 2.38216880435792E-16;
                        double num1009 = num729 * 1.63812999625333E-13;
                        double num1010 = num887 * 0.000104079595076482;
                        double num1011 = num889 * 0.000221523918059665;
                        double num1012 = num891 * 1.04876797536094E-08;
                        double num1013 = num49 * 1.17153262350098E-15;
                        double num1014 = num855 * 1.08416244871336E-09;
                        double num1015 = num14 * 5.81231863996829E-16;
                        double num1016 = num16 * 1.36504457630092E-15;
                        double num1017 = num859 * 1.04131659542744E-05;
                        double num1018 = num44 * 7.46412892032147E-16;
                        double num1019 = num21 * 0.000336068389661607;
                        double num1020 = num76 * 0.999663909301197;
                        double num1021 = num868 * 4.98957914713896E-14;
                        double num1022 = num12 * 4.96575745909538E-14;
                        double num1023 = num48 * 2.09885955671162E-16;
                        double num1024 = num47 * 4.14476318250857E-13;
                        double num1025 = num904 * 0.00010488821877825;
                        double num1026 = num764 * 3.62682931399768E-10;
                        double num1027 = num1000 + num1001 + num1002 + num1003 + num1004 - num1005 + num1006 + num1007 + num1008 + num1009 + num1010 + num1011 + num1012 + num1013 + num1014 - num1015 - num1016 + num1017 + num1018 - num116 - num1019 + num1020 + num1021 + num1022 - num1023 + num1024 + num1025 + num1026;
                        double num1028 = num875 * 0.573686774531863;
                        double num1029 = num383 * 0.0303305510000388;
                        double num1030 = num438 * 0.400063560574001;
                        double num1031 = num43 * 0.91230561164226;
                        double num1032 = num777 * 0.0256804214857644;
                        double num1033 = num58 * 0.0270691262912313;
                        double num1034 = num882 * 0.00867097268589663;
                        double num1035 = num452 * 3.48175614143777E-10;
                        double num1036 = num848 * 0.000569158277610027;
                        double num1037 = num729 * 0.391389243895405;
                        double num1038 = num887 * 3.34360961351671E-06;
                        double num1039 = num889 * 7.71551556268652E-14;
                        double num1040 = num891 * 3.65278192369511E-18;
                        double num1041 = num49 * 0.00298193773018423;
                        double num1042 = num855 * 3.48292668074657E-11;
                        double num1043 = num14 * 0.00138870480546683;
                        double num1044 = num16 * 0.00326142470880754;
                        double num1045 = num859 * 3.62682931399768E-15;
                        double num1046 = num44 * 0.00178336260317809;
                        double num1047 = num76 * 3.48175606373667E-10;
                        double num1048 = num868 * 0.000569158277610027;
                        double num1049 = num12 * 1.72953689568897E-23;
                        double num1050 = num48 * 0.00527954636367048;
                        double num1051 = num47 * 0.00867431667859581;
                        double num1052 = num904 * 3.65317971718112E-14;
                        double num1053 = num764 * 876.943883577403;
                        double num1054 = num1028 + num1029 + num1030 - num1031 + num1032 - num1033 + num1034 + num1035 + num1036 + num1037 + num1038 + num1039 + num1040 - num1041 + num1042 - num1043 - num1044 - num96 + num1045 + num1046 + num1047 + num1048 + num1049 + num1050 - num1051 + num1052 + num1053;
                        double num1055 = num144 - num135 + num128 - num100 + num325 - num332 + num821;
                        double num1056 = num445 - num94 + num128 - num332 + num821;
                        double num1057 = num839 * 1.61980855739541E-21;
                        double num1058 = num383 * 1.3318188924951E-22;
                        double num1059 = num340 * 2.62976039106128E-21;
                        double num1060 = num43 * 3.80498117051574E-22;
                        double num1061 = num777 * 1.127631031231E-22;
                        double num1062 = num58 * 1.18860926060827E-22;
                        double num1063 = num882 * 4.21098785594286E-16;
                        double num1064 = num452 * 1.04876797536094E-08;
                        double num1065 = num848 * 2.49918225006871E-24;
                        double num1066 = num729 * 1.71859584528684E-21;
                        double num1067 = num887 * 1.09192042198535E-12;
                        double num1068 = num889 * 0.000104139904759593;
                        double num1069 = (num38 + num72) * 0.999891115273427;
                        double num1070 = num49 * 1.22907895220265E-23;
                        double num1071 = num855 * 1.13741710623474E-17;
                        double num1072 = num14 * 6.09782293772735E-24;
                        double num1073 = num16 * 1.43209631886828E-23;
                        double num1074 = num859 * 1.09246664100098E-13;
                        double num1075 = num44 * 7.83077105021528E-24;
                        double num1076 = num76 * 9.84862616307976E-31;
                        double num1077 = num25 * 0.000108884726573112;
                        double num1078 = num868 * 4.73433293216585E-06;
                        double num1079 = num12 * 4.73433293216585E-06;
                        double num1080 = num48 * 2.20195669590031E-24;
                        double num1081 = num47 * 4.34835623634813E-21;
                        double num1082 = num904 * 4.93086670263224E-05;
                        double num1083 = num764 * 3.80498117051574E-18;
                        double num1084 = num1057 + num1058 + num1059 + num1060 + num1061 - num1062 + num1063 + num1064 + num1065 + num1066 + num1067 + num1068 + num1069 + num1070 + num1071 - num1072 - num1073 + num1074 + num1075 - num1076 - num112 - num1077 + num1078 + num1079 - num1080 + num1081 + num1082 + num1083;
                        double num1085 = (num666 + num27) * (264.0 / 289.0);
                        double num1086 = num49 * (25.0 / 578.0);
                        double num1087 = num695 * 0.918965709892171;
                        double num1088 = num6 * 0.00547090020359002;
                        double num1089 = num133 + num4 + num545;
                        double num1090 = num1089 * 0.0421069544676903;
                        double num1091 = num26 * (25.0 / 289.0);
                        double num1092 = num701 * 0.00432525951557093;
                        double num1093 = num1085 + num1086 + num1087 + num1088 + num1090 - num131 - num1091 + num1092;
                        double num1094 = -num110;
                        double num1095 = (num49 + num133 + num4 + num545) * (25.0 / 528.0);
                        double num1096 = (-num131 - num26 - num1093) * (25.0 / 264.0);
                        double num1097 = num1094 + num27 + num1095 + num1096;
                        double num1098 = num150 * num326 + num158 - num109 + 8.025E-08;
                        double num1099 = num139 - num142 - num108 + num125 + num330 - num327 + num838;
                        double num1100 = num129 - num107 + num125 + num768 + num838;
                        double num1101 = num714 - num106 + num125 - num327 + num838;
                        double num1102 = num69 * -1E-06 + (-num77 + num108 + num1099) * 1.47058823529412E-05 - num105;
                        double num1103 = num1094 + num131 - num104 - num1097 + num1093;
                        double num1104 = num69 - num103 + num106 - num77 + num1101;
                        double num1105 = num783 * 3.94518913221794E-20;
                        double num1106 = num17 + num75;
                        double num1107 = num1106 * 0.999851959228885;
                        double num1108 = -num107;
                        double num1109 = num1108 - num1100;
                        double num1110 = num1109 * 1.54571289400766E-20;
                        double num1111 = num30 * 2.39947623821028E-20;
                        double num1112 = num35 * 0.000148040771114721;
                        double num1113 = num868 * 2.24130304704554E-10;
                        double num1114 = num937 + num938 + num939 + num940 + num941 - num942 + num943 + num944 + num1105 + num946 + num947 + num1107 + num949 + num950 + num951 + num1110 + num1111 - num952 - num953 + num954 + num955 - num120 - num1112 - num957 + num1113 + num959 - num960 + num961 + num962 + num963;
                        double num1115 = num839 * 1.48270758498639E-09;
                        double num1116 = num383 * 1.21909343219294E-10;
                        double num1117 = num340 * 2.40717686094526E-09;
                        double num1118 = num43 * 3.48292668074657E-10;
                        double num1119 = num777 * 1.03218807891758E-10;
                        double num1120 = num58 * 1.08800509680154E-10;
                        double num1121 = num882 * 0.000385456886604651;
                        double num1122 = num40 + num21 + num76;
                        double num1123 = num1122 * 0.000104079592753775;
                        double num1124 = num129 + num125 + num768 + num838;
                        double num1125 = num1124 * 3.76132726911011E-12;
                        double num1126 = num729 * 1.5731334938928E-09;
                        double num1127 = (num42 + num74) * 0.9995000239303;
                        double num1128 = num49 * 1.12504942430252E-11;
                        double num1129 = num855 * 1.04114585826073E-05;
                        double num1130 = num1109 * 1.47367638498425E-12;
                        double num1131 = num30 * 2.28765088412585E-12;
                        double num1132 = num14 * 5.58170178839553E-12;
                        double num1133 = num16 * 1.310883353914E-11;
                        double num1134 = num859 * 1.08416242451849E-09;
                        double num1135 = num44 * 7.167972770261E-12;
                        double num1136 = num120 + num35 + num1114;
                        double num1137 = num1136 * 2.3067285628053E-08;
                        double num1138 = num36 * 0.000499976069699441;
                        double num1139 = num48 * 2.01558256987649E-12;
                        double num1140 = num47 * 3.98031035483806E-09;
                        double num1141 = num764 * 3.48292668074657E-06;
                        double num1142 = num1115 + num1116 + num1117 + num1118 + num1119 - num1120 + num1121 + num1123 + num1125 + num1126 + num1127 + num1128 + num1129 + num1130 + num1131 - num1132 - num1133 + num1134 + num1135 + num1137 - num118 - num1138 - num1139 + num1140 + num1141;
                        double num1143 = num839 * 3.84510051852957E-06;
                        double num1144 = num383 * 3.16147083600715E-07;
                        double num1145 = num340 * 6.24252353595262E-06;
                        double num1146 = num43 * 9.03226187128602E-07;
                        double num1147 = num777 * 2.67676982140918E-07;
                        double num1148 = num58 * 2.82151990334144E-07;
                        double num1149 = num41 + num73;
                        double num1150 = num1149 * 0.999604028172518;
                        double num1151 = num1124 * 9.75423716669492E-09;
                        double num1152 = num729 * 4.07960171940376E-06;
                        double num1153 = num49 * 2.91758683138909E-08;
                        double num1154 = num1109 * 3.82167993839444E-09;
                        double num1155 = num30 * 5.93255722830048E-09;
                        double num1156 = num14 * 1.44750081932265E-08;
                        double num1157 = num16 * 3.39950932665713E-08;
                        double num1158 = num44 * 1.85886793153415E-08;
                        double num1159 = num118 + num36 + num1142;
                        double num1160 = num1159 * 0.000385649702227051;
                        double num1161 = num37 * 0.000395971827482408;
                        double num1162 = num48 * 5.22700339773496E-09;
                        double num1163 = num47 * 1.03221252553564E-05;
                        double num1164 = num764 * 0.00903226187128602;
                        double num1165 = num1143 + num1144 + num1145 + num1146 + num1147 - num1148 + num1150 + num1151 + num1152 + num1153 + num1154 + num1155 - num1156 - num1157 + num1158 + num1160 - num114 - num1161 - num1162 + num1163 + num1164;
                        double num1166 = -num113 + num38 * 0.999891110343097 + num1136 * 0.000104155323994073 + (-num72 - num25) * 0.000108889656902894 + (num125 + num12 + num838) * 4.73433290882148E-06;
                        double num1167 = num839 * 1.5551856493038E-17;
                        double num1168 = num383 * 1.27868544688424E-18;
                        double num1169 = num340 * 2.5248450519747E-17;
                        double num1170 = num43 * 3.65317992996179E-18;
                        double num1171 = num777 * 1.08264374173942E-18;
                        double num1172 = num58 * 1.14118922034831E-18;
                        double num1173 = num1149 * 4.04298881682985E-12;
                        double num1174 = num452 * 0.00010069269002712;
                        double num1175 = num783 * 3.9451893620068E-20;
                        double num1176 = num729 * 1.65003177896584E-17;
                        double num1177 = num887 * 1.04835776042279E-08;
                        double num1178 = num1106 * 0.999851959228885;
                        double num1179 = num891 * 4.73363203452695E-05;
                        double num1180 = num49 * 1.18004435746435E-19;
                        double num1181 = num855 * 1.09203933377374E-13;
                        double num1182 = num1109 * 1.54571298403822E-20;
                        double num1183 = num30 * 2.39947637796858E-20;
                        double num1184 = num14 * 5.85454786088909E-20;
                        double num1185 = num16 * 1.37496226535929E-19;
                        double num1186 = num859 * 1.0488821877825E-09;
                        double num1187 = num44 * 7.51835931763488E-20;
                        double num1188 = num35 * 0.000148040771114721;
                        double num1189 = -num114;
                        double num1190 = num1189 - num1165;
                        double num1191 = num1190 * 2.35578468381989E-19;
                        double num1192 = num37 * 4.04298858125138E-12;
                        double num1193 = num868 * 2.24130304704554E-10;
                        double num1194 = num12 * 2.24130304665102E-10;
                        double num1195 = num48 * 2.11410875576493E-20;
                        double num1196 = num47 * 4.17487683094054E-17;
                        double num1197 = num904 * 0.473414753422768;
                        double num1198 = num764 * 3.65317992996179E-14;
                        double num1199 = num1167 + num1168 + num1169 + num1170 + num1171 - num1172 + num1173 + num1174 + num1175 + num1176 + num1177 + num1178 + num1179 + num1180 + num1181 + num1182 + num1183 - num1184 - num1185 + num1186 - num123 + num1187 - num1188 + num1191 + num1192 + num1193 + num1194 - num1195 + num1196 + num1197 + num1198 - 400.0;
                        double num1200 = -num117 + num40 * 0.999663898463216 + num859 * 1.04131656089918E-05 + (-num21 - num76) * 0.000336101536783843 + num1136 * 0.000221556715084933 + num1159 * 0.000104131656089918;
                        double num1201 = num839 * 3.8451007424887E-06;
                        double num1202 = num383 * 3.16147102014805E-07;
                        double num1203 = num340 * 6.24252389955043E-06;
                        double num1204 = num43 * 9.03226239737305E-07;
                        double num1205 = num777 * 2.67676997731851E-07;
                        double num1206 = num58 * 2.82152006768179E-07;
                        double num1207 = num41 * 0.99960408639478;
                        double num1208 = num1124 * 9.75423773483364E-09;
                        double num1209 = num729 * 4.07960195702149E-06;
                        double num1210 = num49 * 2.91758700132488E-08;
                        double num1211 = num1109 * 3.82168016098943E-09;
                        double num1212 = num30 * 5.93255757384421E-09;
                        double num1213 = num14 * 1.44750090363281E-08;
                        double num1214 = num16 * 3.39950952466266E-08;
                        double num1215 = num44 * 1.85886803980452E-08;
                        double num1216 = num1159 * 0.000385649724689344;
                        double num1217 = num1190 * 5.82453255079508E-08;
                        double num1218 = num37 * 0.000395971850545916;
                        double num1219 = num73 * 0.000395913605220408;
                        double num1220 = num48 * 5.22700370218348E-09;
                        double num1221 = num47 * 1.03221258565719E-05;
                        double num1222 = num764 * 0.00903226239737305;
                        double num1223 = num1201 + num1202 + num1203 + num1204 + num1205 - num1206 - num115 + num1207 + num1208 + num1209 + num1210 + num1211 + num1212 - num1213 - num1214 + num1215 + num1216 + num1217 - num1218 - num1219 - num1220 + num1221 + num1222;
                        double num1224 = num839 * 1.48270767134719E-09;
                        double num1225 = num383 * 1.21909350319944E-10;
                        double num1226 = num340 * 2.40717700115208E-09;
                        double num1227 = num43 * 3.4829268836108E-10;
                        double num1228 = num777 * 1.03218813903772E-10;
                        double num1229 = num58 * 1.08800516017276E-10;
                        double num1230 = num1149 * 0.000385456909055716;
                        double num1231 = num1122 * 0.000104079592753776;
                        double num1232 = num1124 * 3.76132748818987E-12;
                        double num1233 = num729 * 1.57313358552049E-09;
                        double num1234 = num42 * 0.999500023930309;
                        double num1235 = num49 * 1.1250494898314E-11;
                        double num1236 = num855 * 1.04114585826074E-05;
                        double num1237 = num1109 * 1.47367647081903E-12;
                        double num1238 = num30 * 2.28765101737084E-12;
                        double num1239 = num14 * 5.58170211350362E-12;
                        double num1240 = num16 * 1.31088343026684E-11;
                        double num1241 = num859 * 1.0841624245185E-09;
                        double num1242 = num44 * 7.16797318776197E-12;
                        double num1243 = num1136 * 2.30672856280532E-08;
                        double num1244 = (-num74 - num36) * 0.000499976069690784;
                        double num1245 = num1190 * 2.24599553391302E-11;
                        double num1246 = num37 * 0.000385456886595761;
                        double num1247 = num48 * 2.01558268727477E-12;
                        double num1248 = num47 * 3.98031058667257E-09;
                        double num1249 = num764 * 3.4829268836108E-06;
                        double num1250 = num1224 + num1225 + num1226 + num1227 + num1228 - num1229 + num1230 + num1231 + num1232 + num1233 - num119 + num1234 + num1235 + num1236 + num1237 + num1238 - num1239 - num1240 + num1241 + num1242 + num1243 + num1244 + num1245 + num1246 - num1247 + num1248 + num1249;
                        double num1251 = num839 * 0.000444076241785592;
                        double num1252 = num383 * 3.15943211017189E-05;
                        double num1253 = num438 * 0.000416732932004369;
                        double num1254 = num43 * 0.999049681646378;
                        double num1255 = num777 * 2.67504366289846E-05;
                        double num1256 = num58 * 2.81970040038853E-05;
                        double num1257 = num729 * 0.000407697092195081;
                        double num1258 = num49 * 0.0057839308516378;
                        double num1259 = num107 + num30 + num1100;
                        double num1260 = num1259 * 5.92873152238134E-07;
                        double num1261 = num14 * 1.44656737490074E-06;
                        double num1262 = num16 * 3.39731709783359E-06;
                        double num1263 = num44 * 1.85766921034615E-06;
                        double num1264 = num114 + num37 - num47 + num1165;
                        double num1265 = num1264 * 9.03583980928814E-06;
                        double num1266 = num48 * 0.00578153750952765;
                        double num1267 = num995 * 9.50318353622096;
                        double num1268 = num1251 + num1252 + num1253 - num99 + num1254 + num1255 - num1256 + num1257 + num1258 + num1260 - num1261 - num1262 + num1263 + num1265 - num1266 + num1267;
                        double num1269 = num875 * 0.913173424942975;
                        double num1270 = num436 * 0.00459809645962059;
                        double num1271 = num340 * 0.0606494506746133;
                        double num1272 = num99 + num1268;
                        double num1273 = num1272 * 0.138305091071081;
                        double num1274 = num969 * 0.00389313913601856;
                        double num1275 = num58 * 0.00410366609444628;
                        double num1276 = num976 * 0.0593344148837501;
                        double num1277 = num49 * 0.000348316327099147;
                        double num1278 = num1108 - num30 - num1100;
                        double num1279 = num1278 * 8.6284112057149E-05;
                        double num1280 = num14 * 0.000210526958427724;
                        double num1281 = num16 * 0.000494430365174306;
                        double num1282 = num96 + num1054;
                        double num1283 = num1282 * 0.151455448979714;
                        double num1284 = num44 * 0.000270356884445733;
                        double num1285 = num1189 - num37 + num47 - num1165;
                        double num1286 = num1285 * 0.00131503579086326;
                        double num1287 = num995 * 131.503579086326;
                        double num1288 = num1269 + num1270 + num1271 + num1273 + num1274 + num1275 + num1276 - num1277 + num1279 + num1280 + num1281 + num1283 - num93 - num1284 + num1286 + num1287;
                        double num1289 = -num102 + num45 * 0.994046676448644 + (-num6 - num104 - num1103) * 0.0059533235513564 + num1089 * 0.00124666315150487 + (num138 + num1 + num373) * 0.00470666039985153;
                        double num1290 = num839 * 0.573281289263185;
                        double num1291 = num436 * 0.0303593993520594;
                        double num1292 = num438 * 0.599555835837001;
                        double num1293 = (-num99 - num1268) * 0.086826575057025;
                        double num1294 = num969 * 0.0257048469516604;
                        double num1295 = num58 * 0.0270948725984493;
                        double num1296 = num46 * 0.391761506657297;
                        double num1297 = num49 * 0.00229979396215583;
                        double num1298 = num1278 * 0.000569699622155594;
                        double num1299 = num14 * 0.00139002564678886;
                        double num1300 = num16 * 0.0032645267536101;
                        double num1301 = (num88 + num712) * 0.608238493342703;
                        double num1302 = num44 * 0.00178505881608753;
                        double num1303 = num1285 * 0.0086826575057025;
                        double num1304 = num995 * 868.26575057025;
                        double num1305 = num1290 + num1291 + num1292 + num1293 + num1294 + num1295 - num130 + num1296 - num1297 + num1298 + num1299 + num1300 + num1301 - num1302 + num1303 + num1304;
                        double num1306 = num875 * 0.942527142786699;
                        double num1307 = num383 * 0.0499136435532267;
                        double num1308 = num340 * 0.985724912841367;
                        double num1309 = num1272 * 0.142750871586327;
                        double num1310 = num777 * 0.0422611315018785;
                        double num1311 = num58 * 0.0445464614538677;
                        double num1312 = num130 - num46 + num1305;
                        double num1313 = num1312 * 0.644091932597505;
                        double num1314 = num49 * 0.00378107269981686;
                        double num1315 = num1259 * 0.00093663855278986;
                        double num1316 = num14 * 0.00228532995198919;
                        double num1317 = num16 * 0.00536718209935909;
                        double num1318 = num44 * 0.00293480079874156;
                        double num1319 = num1264 * 0.0142750871586327;
                        double num1320 = num764 * 1427.50871586327;
                        double num1321 = num1306 + num1307 + num1308 + num1309 + num1310 - num1311 + num1313 + num1314 + num1315 - num1316 - num1317 + num1318 + num1319 - num98 + num1320;
                        double num1322 = num875 * 0.956176647772704;
                        double num1323 = num383 * 0.0506364837724857;
                        double num1324 = num1272 * 0.144818163492333;
                        double num1325 = num777 * 0.0428731494469995;
                        double num1326 = num58 * 0.0451915751276508;
                        double num1327 = num1312 * 0.653419553677405;
                        double num1328 = num49 * 0.0038358295002587;
                        double num1329 = num1259 * 0.000950202780296974;
                        double num1330 = num14 * 0.0023184256806513;
                        double num1331 = num16 * 0.0054449086448349;
                        double num1332 = num44 * 0.00297730204493052;
                        double num1333 = (num114 + num37 - num98 - num47 + num1165 - num1321) * 0.0144818163492333;
                        double num1334 = num764 * 1448.18163492333;
                        double num1335 = num1322 + num1323 + num1324 + num1325 - num1326 + num1327 + num1328 + num1329 - num1330 - num1331 + num1332 + num1333 - num97 + num1334;
                        double num1336 = num58 * 0.0685501471025996;
                        double num1337 = (-num130 + num46 - num1305) * 0.685501471025996;
                        double num1338 = num49 * 0.00402416295966929;
                        double num1339 = -num91;
                        double num1340 = num1339 - num907;
                        double num1341 = num1340 * 0.0709909253173189;
                        double num1342 = num14 * 0.00244077821471936;
                        double num1343 = num90 + num936;
                        double num1344 = num1343 * 0.0750150882769882;
                        double num1345 = num16 * 0.00646494117438864;
                        double num1346 = num1282 * 0.151928517514627;
                        double num1347 = (num1189 - num37 + num98 + num47 - num1165 + num1321) * 0.0151928517514627;
                        double num1348 = num97 + num1335;
                        double num1349 = num1348 * 0.844047319525704;
                        double num1350 = num995 * 1519.28517514627;
                        double num1351 = num1336 + num1337 - num87 - num1338 + num1341 - num1342 + num1344 + num1345 + num1346 + num1347 + num1349 + num1350;
                        double num1352 = (num382 - num97 - num331 - num1335) * 0.308383490005535;
                        double num1353 = num50 * 0.633576142344686;
                        double num1354 = num58 * 0.297780786902002;
                        double num1355 = num517 * 0.366423857655315;
                        double num1356 = num1278 * 0.0140420244313982;
                        double num1357 = num14 * 0.0686430707533124;
                        double num1358 = num16 * 0.0106027031035333;
                        double num1359 = (-num93 - num44 - num1288) * 0.0439983432183809;
                        double num1360 = num1352 - num92 + num1353 - num1354 + num1355 + num1356 + num1357 - num1358 + num1359;
                        double num1361 = (num974 + num8 - num768) * 0.0004512;
                        double num1362 = (num103 - num34 + num1104) * (282.0 / 625.0);
                        double num1363 = -num87;
                        double num1364 = (num1363 - num49 + num106 + num31 - num1351 + num1101) * 0.000555555555555556;
                        double num1365 = (-num112 - num25 + num125 + num12 - num1084 + num838) * 4.54545454545455E-06;
                        double num1366 = num1361 + num1362 + num1364 + num1365 - num86 - num51;
                        double num1367 = (num908 + num15 - num909) * 0.002112 + (num982 - num5 + num118 + num36 - num599 + num1142) * 1E-05 - num85 - num52;
                        double num1368 = num830 * 0.0004512 + (num112 + num25 - num125 - num12 + num1084 - num838) * 4.54545454545455E-06 - num84 - num53;
                        double num1369 = num58 * 4.512E-05;
                        double num1370 = num1363 - num1351;
                        double num1371 = num1370 * 0.000658204276826256;
                        double num1372 = num49 * 2.64872127070013E-06;
                        double num1373 = num1340 * 4.67265306597126E-05;
                        double num1374 = num14 * 1.60653065971263E-06;
                        double num1375 = num1343 * 4.93752519304128E-05;
                        double num1376 = num16 * 4.25525193041276E-06;
                        double num1377 = num1282 * 0.0001;
                        double num1378 = num1348 * 0.000555555555555556;
                        double num1379 = num1369 + num1371 - num1372 + num1373 - num1374 + num1375 + num1376 + num1377 + num1378 + num55 - num83;
                        double num1380 = num1370 * 0.000655555555555556 + num1377 + num1378 - num1379 - num81 - num83;
                        double num1381 = num459 * 2.112E-05;
                        double num1382 = (num986 - num821) * 6.14230303030303E-05;
                        double num1383 = num9 * 4.03030303030303E-05;
                        double num1384 = (num116 + num21 + num1027) * 1E-05;
                        double num1385 = (num104 + num33 + num1103) * 3.03030303030303E-05;
                        double num1386 = num1381 + num1382 - num1383 + num1384 + num1385 - num78 - num56;
                        double num1387 = (num59 - num136 - num431) * 2.112E-05;
                        double num1388 = num1363 + num94 - num1351 + num1056;
                        double num1389 = num1388 * 0.000454545454545455;
                        double num1390 = (num128 + num821) * 6.14230303030303E-05;
                        double num1391 = -num116 - num21 - num1027;
                        double num1392 = num1391 * 1E-05;
                        double num1393 = -num104 - num33 - num1103;
                        double num1394 = num1393 * 3.03030303030303E-05;
                        double num1395 = num1387 + num1389 + num1390 + num1383 + num1392 + num1394 - num80 + num56;
                        double num1396 = -num82;
                        double num1397 = num1370 * 14.5878607452628;
                        double num1398 = num49 * 0.0587039288719;
                        double num1399 = (num1339 - num14 - num907) * 0.035605732706397;
                        double num1400 = (num90 + num16 + num936) * 0.094309661578297;
                        double num1401 = num1282 * (625.0 / 282.0);
                        double num1402 = num1348 * 12.3128447596533;
                        double num1403 = (-num1379 + num55 - num83) * 22163.1205673759;
                        double num1404 = num1396 + num58 + num1397 - num1398 + num1399 + num1400 + num1401 + num1402 + num1403;
                        double num1405 = -num79;
                        double num1406 = num1388 * 21.5220385674931;
                        double num1407 = num859 * 1.90828741965106;
                        double num1408 = num1391 * (125.0 / 264.0);
                        double num1409 = num1393 * 1.43480257116621;
                        double num1410 = (-num1395 - num80 + num56) * 47348.4848484848;
                        double num1411 = num1405 + num59 + num1406 + num1407 + num1408 + num1409 + num1410;
                        bool flag1 = Math.Abs(num373) * 10000.0 < Math.Abs(num138) + 1E-06;
                        num138 += num373;
                        bool flag2 = flag1 && Math.Abs(num431) * 10000.0 < Math.Abs(num136) + 1E-06;
                        num136 += num431;
                        bool flag3 = flag2 && Math.Abs(num490) * 10000.0 < Math.Abs(num134) + 1E-06;
                        num134 += num490;
                        bool flag4 = flag3 && Math.Abs(num545) * 10000.0 < Math.Abs(num133) + 1E-06;
                        num133 += num545;
                        bool flag5 = flag4 && Math.Abs(num599) * 10000.0 < Math.Abs(num132) + 1E-06;
                        num132 += num599;
                        bool flag6 = flag5 && Math.Abs(num651) * 10000.0 < Math.Abs(num101) + 1E-06;
                        num101 += num651;
                        bool flag7 = flag6 && Math.Abs(num712) * 10000.0 < Math.Abs(num88) + 1E-06;
                        num88 += num712;
                        bool flag8 = flag7 && Math.Abs(num768) * 10000.0 < Math.Abs(num129) + 1E-06;
                        num129 += num768;
                        bool flag9 = flag8 && Math.Abs(num821) * 10000.0 < Math.Abs(num128) + 1E-06;
                        num128 += num821;
                        bool flag10 = flag9 && Math.Abs(num822) * 10000.0 < Math.Abs(num127) + 1E-06;
                        num127 += num822;
                        bool flag11 = flag10 && Math.Abs(num827) * 10000.0 < Math.Abs(num111) + 1E-06;
                        num111 += num827;
                        bool flag12 = flag11 && Math.Abs(num838) * 10000.0 < Math.Abs(num125) + 1E-06;
                        num125 += num838;
                        bool flag13 = flag12 && Math.Abs(num874) * 10000.0 < Math.Abs(num124) + 1E-06;
                        num124 += num874;
                        bool flag14 = flag13 && Math.Abs(num907) * 10000.0 < Math.Abs(num91) + 1E-06;
                        num91 += num907;
                        bool flag15 = flag14 && Math.Abs(num909) * 10000.0 < Math.Abs(num126) + 1E-06;
                        num126 += num909;
                        bool flag16 = flag15 && Math.Abs(num936) * 10000.0 < Math.Abs(num90) + 1E-06;
                        num90 += num936;
                        bool flag17 = flag16 && Math.Abs(num964) * 10000.0 < Math.Abs(num122) + 1E-06;
                        num122 += num964;
                        bool flag18 = flag17 && Math.Abs(num997) * 10000.0 < Math.Abs(num121) + 1E-06;
                        num121 += num997;
                        bool flag19 = flag18 && Math.Abs(num998) * 10000.0 < Math.Abs(num95) + 1E-06;
                        num95 += num998;
                        bool flag20 = flag19 && Math.Abs(num999) * 10000.0 < Math.Abs(num89) + 1E-06;
                        num89 += num999;
                        bool flag21 = flag20 && Math.Abs(num1027) * 10000.0 < Math.Abs(num116) + 1E-06;
                        num116 += num1027;
                        bool flag22 = flag21 && Math.Abs(num1054) * 10000.0 < Math.Abs(num96) + 1E-06;
                        num96 += num1054;
                        bool flag23 = flag22 && Math.Abs(num1055) * 10000.0 < Math.Abs(num100) + 1E-06;
                        num100 += num1055;
                        bool flag24 = flag23 && Math.Abs(num1056) * 10000.0 < Math.Abs(num94) + 1E-06;
                        num94 += num1056;
                        bool flag25 = flag24 && Math.Abs(num1084) * 10000.0 < Math.Abs(num112) + 1E-06;
                        num112 += num1084;
                        bool flag26 = flag25 && Math.Abs(num1093) * 10000.0 < Math.Abs(num131) + 1E-06;
                        num131 += num1093;
                        bool flag27 = flag26 && Math.Abs(num1097) * 10000.0 < Math.Abs(num110) + 1E-06;
                        num110 += num1097;
                        bool flag28 = flag27 && Math.Abs(num1098) * 10000.0 < Math.Abs(num109) + 1E-06;
                        num109 += num1098;
                        bool flag29 = flag28 && Math.Abs(num1099) * 10000.0 < Math.Abs(num108) + 1E-06;
                        num108 += num1099;
                        bool flag30 = flag29 && Math.Abs(num1100) * 10000.0 < Math.Abs(num107) + 1E-06;
                        num107 += num1100;
                        bool flag31 = flag30 && Math.Abs(num1101) * 10000.0 < Math.Abs(num106) + 1E-06;
                        num106 += num1101;
                        bool flag32 = flag31 && Math.Abs(num1102) * 10000.0 < Math.Abs(num105) + 1E-06;
                        num105 += num1102;
                        bool flag33 = flag32 && Math.Abs(num1103) * 10000.0 < Math.Abs(num104) + 1E-06;
                        num104 += num1103;
                        bool flag34 = flag33 && Math.Abs(num1104) * 10000.0 < Math.Abs(num103) + 1E-06;
                        num103 += num1104;
                        bool flag35 = flag34 && Math.Abs(num1114) * 10000.0 < Math.Abs(num120) + 1E-06;
                        num120 += num1114;
                        bool flag36 = flag35 && Math.Abs(num1142) * 10000.0 < Math.Abs(num118) + 1E-06;
                        num118 += num1142;
                        bool flag37 = flag36 && Math.Abs(num1165) * 10000.0 < Math.Abs(num114) + 1E-06;
                        num114 += num1165;
                        bool flag38 = flag37 && Math.Abs(num1166) * 10000.0 < Math.Abs(num113) + 1E-06;
                        num113 += num1166;
                        bool flag39 = flag38 && Math.Abs(num1199) * 10000.0 < Math.Abs(num123) + 1E-06;
                        num123 += num1199;
                        bool flag40 = flag39 && Math.Abs(num1200) * 10000.0 < Math.Abs(num117) + 1E-06;
                        num117 += num1200;
                        bool flag41 = flag40 && Math.Abs(num1223) * 10000.0 < Math.Abs(num115) + 1E-06;
                        num115 += num1223;
                        bool flag42 = flag41 && Math.Abs(num1250) * 10000.0 < Math.Abs(num119) + 1E-06;
                        num119 += num1250;
                        bool flag43 = flag42 && Math.Abs(num1268) * 10000.0 < Math.Abs(num99) + 1E-06;
                        num99 += num1268;
                        bool flag44 = flag43 && Math.Abs(num1288) * 10000.0 < Math.Abs(num93) + 1E-06;
                        num93 += num1288;
                        bool flag45 = flag44 && Math.Abs(num1289) * 10000.0 < Math.Abs(num102) + 1E-06;
                        num102 += num1289;
                        bool flag46 = flag45 && Math.Abs(num1305) * 10000.0 < Math.Abs(num130) + 1E-06;
                        num130 += num1305;
                        bool flag47 = flag46 && Math.Abs(num1321) * 10000.0 < Math.Abs(num98) + 1E-06;
                        num98 += num1321;
                        bool flag48 = flag47 && Math.Abs(num1335) * 10000.0 < Math.Abs(num97) + 1E-06;
                        num97 += num1335;
                        bool flag49 = flag48 && Math.Abs(num1351) * 10000.0 < Math.Abs(num87) + 1E-06;
                        num87 += num1351;
                        bool flag50 = flag49 && Math.Abs(num1360) * 10000.0 < Math.Abs(num92) + 1E-06;
                        num92 += num1360;
                        bool flag51 = flag50 && Math.Abs(num1366) * 10000.0 < Math.Abs(num86) + 1E-06;
                        num86 += num1366;
                        bool flag52 = flag51 && Math.Abs(num1367) * 10000.0 < Math.Abs(num85) + 1E-06;
                        num85 += num1367;
                        bool flag53 = flag52 && Math.Abs(num1368) * 10000.0 < Math.Abs(num84) + 1E-06;
                        num84 += num1368;
                        bool flag54 = flag53 && Math.Abs(num1379) * 10000.0 < Math.Abs(num83) + 1E-06;
                        num83 += num1379;
                        bool flag55 = flag54 && Math.Abs(num1380) * 10000.0 < Math.Abs(num81) + 1E-06;
                        num81 += num1380;
                        bool flag56 = flag55 && Math.Abs(num1386) * 10000.0 < Math.Abs(num78) + 1E-06;
                        num78 += num1386;
                        bool flag57 = flag56 && Math.Abs(num1395) * 10000.0 < Math.Abs(num80) + 1E-06;
                        num80 += num1395;
                        bool flag58 = flag57 && Math.Abs(num1404) * 10000.0 < Math.Abs(num82) + 1E-06;
                        num82 += num1404;
                        bool flag59 = flag58 && Math.Abs(num1411) * 10000.0 < Math.Abs(num79) + 1E-06;
                        num79 += num1411;
                        bool flag60 = flag59 && Math.Abs(num332) * 10000.0 < Math.Abs(num135) + 1E-06;
                        num135 += num332;
                        bool flag61 = flag60 && Math.Abs(num331) * 10000.0 < Math.Abs(num137) + 1E-06;
                        num137 += num331;
                        bool flag62 = flag61 && Math.Abs(num330) * 10000.0 < Math.Abs(num139) + 1E-06;
                        num139 += num330;
                        bool flag63 = flag62 && Math.Abs(num329) * 10000.0 < Math.Abs(num140) + 1E-06;
                        num140 += num329;
                        bool flag64 = flag63 && Math.Abs(num328) * 10000.0 < Math.Abs(num141) + 1E-06;
                        num141 += num328;
                        bool flag65 = flag64 && Math.Abs(num327) * 10000.0 < Math.Abs(num142) + 1E-06;
                        num142 += num327;
                        bool flag66 = flag65 && Math.Abs(num326) * 10000.0 < Math.Abs(num143) + 1E-06;
                        num143 += num326;
                        bool flag67 = flag66 && Math.Abs(num325) * 10000.0 < Math.Abs(num144) + 1E-06;
                        num144 += num325;
                        if (!flag67)
                            --num145;
                        else
                            break;
                    }
                    while (num145 > 0);
                    double num1412 = 0.0;
                    num1 = num138;
                    num2 = num136;
                    num3 = num134;
                    num4 = num133;
                    num5 = num132;
                    num6 = num101;
                    num7 = num88;
                    num8 = num129;
                    num9 = num128;
                    num10 = num127;
                    num11 = num111;
                    num12 = num125;
                    num13 = num124;
                    num14 = num91;
                    num15 = num126;
                    num16 = num90;
                    num17 = num122;
                    num18 = num121;
                    num19 = num95;
                    num20 = num89;
                    num21 = num116;
                    num22 = num96;
                    num23 = num100;
                    num24 = num94;
                    num25 = num112;
                    num26 = num131;
                    num27 = num110;
                    num28 = num109;
                    num29 = num108;
                    num30 = num107;
                    num31 = num106;
                    num32 = num105;
                    num33 = num104;
                    num34 = num103;
                    num35 = num120;
                    num36 = num118;
                    num37 = num114;
                    num38 = num113;
                    num39 = num123;
                    num40 = num117;
                    num41 = num115;
                    num42 = num119;
                    num43 = num99;
                    num44 = num93;
                    num45 = num102;
                    num46 = num130;
                    num47 = num98;
                    num48 = num97;
                    num49 = num87;
                    num50 = num92;
                    num51 = num86;
                    num52 = num85;
                    num53 = num84;
                    num54 = num83;
                    num55 = num81;
                    num56 = num78;
                    num57 = num80;
                    num58 = num82;
                    num59 = num79;
                    num60 = num135;
                    num61 = num137;
                    num62 = num139;
                    num63 = num140;
                    num64 = num141;
                    num65 = num142;
                    num66 = num143;
                    num67 = num144;
                    double num1413 = -num1412 + num127;
                    d += num1413;
                    num68 = num69;
                    --num71;
                }
                while (num71 > 0);
                outs[0][At] = d * 1.0;
                outs[1][At] = d * 1.0;
                if ((At & (int)byte.MaxValue) == 0)
                {
                    if (double.IsNaN(d) | double.IsInfinity(d))
                        throw new SimulationDiverged(At);
                }
            }
            state[0] = num1;
            state[1] = num2;
            state[2] = num3;
            state[3] = num4;
            state[4] = num5;
            state[5] = num6;
            state[6] = num7;
            state[7] = num8;
            state[8] = num9;
            state[9] = num10;
            state[10] = num11;
            state[11] = num12;
            state[12] = num13;
            state[13] = num14;
            state[14] = num15;
            state[15] = num16;
            state[16] = num17;
            state[17] = num18;
            state[18] = num19;
            state[19] = num20;
            state[20] = num21;
            state[21] = num22;
            state[22] = num23;
            state[23] = num24;
            state[24] = num25;
            state[25] = num26;
            state[26] = num27;
            state[27] = num28;
            state[28] = num29;
            state[29] = num30;
            state[30] = num31;
            state[31] = num32;
            state[32] = num33;
            state[33] = num34;
            state[34] = num35;
            state[35] = num36;
            state[36] = num37;
            state[37] = num38;
            state[38] = num39;
            state[39] = num40;
            state[40] = num41;
            state[41] = num42;
            state[42] = num43;
            state[43] = num44;
            state[44] = num45;
            state[45] = num46;
            state[46] = num47;
            state[47] = num48;
            state[48] = num49;
            state[49] = num50;
            state[50] = num51;
            state[51] = num52;
            state[52] = num53;
            state[53] = num54;
            state[54] = num55;
            state[55] = num56;
            state[56] = num57;
            state[57] = num58;
            state[58] = num59;
            state[59] = num60;
            state[60] = num61;
            state[61] = num62;
            state[62] = num63;
            state[63] = num64;
            state[64] = num65;
            state[65] = num66;
            state[66] = num67;
            return state[67] = num68;
        }
    }
}
